var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/App.html",[0,0.152,1,0.519]],["body/components/App.html",[0,0.225,1,1.042,2,0.745,3,0.282,4,0.239,5,0.654,6,0.654,7,0.239,8,2.313,9,0.654,10,1.272,11,2.793,12,0.827,13,2.061,14,2.279,15,0.931,16,0.931,17,0.931,18,2.839,19,0.827,20,4.413,21,1.241,22,4.513,23,4.513,24,4.513,25,4.513,26,4.513,27,4.513,28,4.513,29,0.494,30,4.513,31,0.915,32,3.912,33,0.198,34,0.278,35,1.842,36,4.513,37,3.734,38,3.734,39,0.915,40,0.667,41,0.037,42,1.975,43,0.745,44,2.795,45,3.912,46,3.912,47,2.795,48,0.573,49,1.053,50,1.758,51,0.282,52,2.795,53,2.313,54,2.795,55,1.088,56,1.995,57,2.313,58,2.795,59,1.995,60,2.313,61,2.795,62,1.995,63,2.313,64,1.758,65,1.758,66,1.411,67,1.569,68,2.795,69,0.721,70,2.795,71,0.532,72,0.654,73,0.915,74,0.654,75,1.144,76,0.654,77,0.745,78,0.654,79,0.424,80,0.327,81,1.144,82,0.424,83,0.532,84,0.532,85,0.282,86,0.654,87,0.532,88,0.742,89,0.654,90,0.532,91,0.915,92,0.654,93,0.532,94,0.654,95,0.654,96,0.532,97,0.532,98,0.654,99,0.654,100,0.424,101,0.327,102,0.424,103,0.327,104,0.591,105,0.654,106,0.023,107,0.023]],["title/components/CheckboxField.html",[0,0.152,79,0.462]],["body/components/CheckboxField.html",[0,0.245,1,1.05,2,0.829,3,0.33,4,0.28,5,0.765,6,0.765,7,0.28,9,0.765,10,1.298,12,0.921,15,0.623,16,0.623,17,0.623,19,0.921,21,1.104,29,0.33,31,1.019,33,0.232,34,0.309,41,0.036,43,0.829,48,0.495,51,0.33,55,1.036,69,0.844,71,0.623,72,0.765,73,1.019,74,0.765,75,1.222,76,0.765,77,0.829,78,0.765,79,0.792,80,0.655,81,1.222,82,0.496,83,0.623,84,0.623,85,0.33,86,0.765,87,0.623,88,0.907,89,0.765,90,0.623,91,1.019,92,0.765,93,0.623,94,0.765,95,0.765,96,0.623,97,0.623,98,0.765,99,0.765,100,0.496,101,0.383,102,0.496,103,0.383,104,0.692,105,0.765,106,0.026,107,0.026,108,2.472,109,3.495,110,3.495,111,1.651,112,3.495,113,2.748,114,2.444,115,1.988,116,0.844,117,1.355,118,4.355,119,1.021,120,0.623,121,1.835,122,2.706,123,1.835,124,1.232]],["title/components/DateField.html",[0,0.152,82,0.462]],["body/components/DateField.html",[0,0.236,1,1.042,2,0.793,3,0.309,4,0.262,5,0.716,6,0.716,7,0.262,9,0.716,10,1.287,12,0.88,15,0.582,16,0.582,17,0.582,19,0.88,21,1.075,29,0.309,31,0.974,33,0.217,34,0.296,41,0.037,43,0.793,48,0.554,51,0.309,55,1.001,69,0.79,71,0.582,72,0.716,73,0.974,74,0.716,75,1.189,76,0.716,77,0.793,78,0.716,79,0.464,80,0.358,81,1.189,82,0.771,83,1.044,84,0.582,85,0.309,86,0.716,87,0.582,88,0.904,89,0.716,90,0.582,91,0.974,92,0.716,93,0.582,94,0.716,95,0.716,96,0.582,97,0.582,98,0.716,99,0.716,100,0.464,101,0.358,102,0.464,103,0.358,104,0.647,105,0.716,106,0.024,107,0.024,108,2.39,111,1.544,113,2.656,114,2.337,115,1.901,116,0.79,117,1.267,119,0.955,120,0.582,121,1.717,123,1.717,124,1.152,125,3.379,126,3.379,127,3.445,128,4.733,129,3.916,130,2.656,131,2.656,132,4.733,133,4.163,134,3.058,135,1.717,136,1.717,137,3.058]],["title/components/DynamicOptions.html",[0,0.152,84,0.58]],["body/components/DynamicOptions.html",[0,0.207,1,1.009,2,0.667,3,0.242,4,0.205,5,0.56,6,0.56,7,0.205,9,0.56,10,1.244,12,0.74,13,1.598,14,2.09,15,0.456,16,0.456,17,0.456,19,0.74,21,0.963,29,0.242,31,0.819,33,0.359,34,0.249,38,4.189,39,0.969,40,0.777,41,0.037,43,0.964,48,0.542,51,0.242,55,0.875,66,1.208,67,1.343,69,0.618,71,0.456,72,0.56,73,0.819,74,0.56,75,1.066,76,0.56,77,0.867,78,0.56,79,0.363,80,0.28,81,1.066,82,0.363,83,0.456,84,0.867,85,0.511,86,0.56,87,0.456,88,0.736,89,0.56,90,0.456,91,0.819,92,0.56,93,0.456,94,0.56,95,0.56,96,0.456,97,0.456,98,0.56,99,0.56,100,0.363,101,0.28,102,0.363,103,0.28,104,0.506,105,0.56,106,0.021,107,0.021,119,1.293,124,1.319,130,1.965,131,1.965,135,1.343,136,1.343,138,3.733,139,4.327,140,3.733,141,1.98,142,2.222,143,2.897,144,3.425,145,2.955,146,2.09,147,2.955,148,3.425,149,3.501,150,4.139,151,1.45,152,4.554,153,3.501,154,3.501,155,2.393,156,1.715,157,1.89,158,2.393,159,4.01,160,2.393,161,1.598,162,0.74,163,1.319,164,3.501,165,4.139,166,1.201,167,2.393,168,2.393,169,4.139,170,2.393,171,2.393,172,1.98,173,2.393,174,2.393,175,2.393,176,1.093,177,1.093,178,1.709,179,2.393,180,2.393,181,2.556,182,5.062,183,4.139,184,2.393,185,2.393,186,1.598,187,2.202,188,3.501,189,2.09,190,2.393,191,2.393,192,3.501,193,2.393,194,3.501,195,2.393,196,3.501]],["title/components/FieldButton.html",[0,0.152,87,0.58]],["body/components/FieldButton.html",[0,0.238,1,1.044,2,0.801,3,0.314,4,0.266,5,0.727,6,0.727,7,0.266,9,0.727,10,1.29,12,0.89,13,1.921,15,0.592,16,0.592,17,0.592,18,2.647,19,0.89,21,1.082,29,0.314,31,0.985,33,0.221,34,0.299,39,0.727,40,0.53,41,0.037,43,0.908,48,0.517,50,1.955,51,0.314,55,1.009,64,1.955,65,1.955,66,1.569,69,0.802,71,0.592,72,0.727,73,0.985,74,0.727,75,1.197,76,0.727,77,0.801,78,0.727,79,0.472,80,0.364,81,1.197,82,0.472,83,0.592,84,0.592,85,0.314,86,0.727,87,0.974,88,0.917,89,0.727,90,0.592,91,0.985,92,0.727,93,0.592,94,0.727,95,0.727,96,0.592,97,0.592,98,0.727,99,0.727,100,0.472,101,0.364,102,0.472,103,0.364,104,0.657,105,0.727,106,0.025,107,0.025,108,2.582,113,2.87,115,1.921,116,0.802,117,1.287,119,0.97,121,1.744,124,1.171,197,3.651,198,2.571,199,3.004,200,5.114,201,4.208,202,4.208,203,4.771,204,4.208,205,4.208,206,3.107,207,1.066,208,3.107,209,3.107,210,3.107,211,3.107]],["title/components/FieldPreview.html",[0,0.152,90,0.58]],["body/components/FieldPreview.html",[0,0.232,1,1.037,2,0.772,3,0.298,4,0.252,5,0.689,6,0.689,7,0.252,9,0.689,10,1.281,12,0.858,15,0.561,16,0.561,17,0.561,19,0.858,21,1.058,29,0.298,31,0.949,33,0.209,34,0.288,39,0.949,40,0.692,41,0.037,43,0.952,48,0.505,49,1.11,51,0.298,55,0.982,69,0.76,71,0.561,72,0.689,73,0.949,74,0.689,75,1.17,76,0.689,77,0.772,78,0.689,79,0.447,80,0.345,81,1.17,82,0.447,83,0.561,84,0.561,85,0.298,86,0.689,87,0.561,88,0.91,89,0.689,90,0.952,91,0.949,92,0.689,93,0.561,94,0.689,95,0.689,96,0.561,97,0.561,98,0.689,99,0.689,100,0.447,101,0.345,102,0.447,103,0.345,104,0.623,105,0.689,106,0.024,107,0.024,115,1.852,116,0.76,117,1.22,119,0.92,120,0.561,124,1.11,162,0.858,177,1.345,181,2.048,212,2.648,213,4.34,214,2.944,215,2.103,216,2.552,217,3.84,218,3.357,219,2.072,220,4.64,221,4.057,222,2.277,223,2.945,224,2.919,225,4.057,226,1.852,227,4.057,228,4.057,229,2.945,230,1.853,231,1.853,232,1.653,233,2.437]],["title/components/FieldSettings.html",[0,0.152,17,0.58]],["body/components/FieldSettings.html",[0,0.189,1,0.985,2,0.595,3,0.207,4,0.176,5,0.481,6,0.481,7,0.176,9,0.481,10,1.213,12,0.66,15,0.391,16,0.391,17,1.019,19,0.66,21,0.893,29,0.207,31,0.731,33,0.146,34,0.322,35,1.591,39,0.988,40,0.874,41,0.038,42,1.577,43,0.911,48,0.53,49,0.774,51,0.207,55,0.799,62,3.55,63,2.584,69,0.53,71,0.391,72,0.481,73,0.731,74,0.481,75,0.988,76,0.481,77,0.719,78,0.481,79,0.312,80,0.24,81,0.988,82,0.312,83,0.391,84,0.804,85,0.315,86,0.481,87,0.391,88,0.904,89,0.481,90,0.391,91,0.731,92,0.481,93,0.391,94,0.481,95,0.481,96,0.391,97,0.391,98,0.481,99,0.481,100,0.312,101,0.24,102,0.312,103,0.24,104,0.434,105,0.481,106,0.018,107,0.018,112,2.698,122,1.699,131,2.121,135,1.153,136,1.153,138,3.55,140,1.466,142,1.749,143,3.127,145,2.698,146,2.415,147,2.698,151,1.294,156,0.851,157,0.938,161,0.938,162,0.434,163,0.774,166,1.641,178,1.466,181,2.415,219,1.749,222,1.753,224,2.857,226,2.34,231,1.292,232,1.153,234,1.699,235,3.779,236,2.698,237,3.779,238,3.127,239,3.779,240,3.779,241,3.779,242,3.779,243,3.123,244,5.249,245,3.123,246,3.123,247,3.779,248,3.127,249,3.123,250,3.123,251,3.779,252,2.584,253,3.127,254,3.123,255,2.584,256,1.725,257,2.053,258,1.699,259,4.222,260,3.494,261,2.584,262,3.123,263,3.123,264,2.053,265,2.053,266,2.053,267,2.584,268,1.153,269,1.699,270,2.053,271,2.053,272,2.053,273,2.053,274,2.053,275,2.053,276,2.053,277,2.053]],["title/interfaces/FieldSettingsDefinition.html",[278,0.951,279,1.537]],["body/interfaces/FieldSettingsDefinition.html",[3,0.372,4,0.316,7,0.316,29,0.552,33,0.261,34,0.334,40,0.628,41,0.037,48,0.372,51,0.372,80,0.607,85,0.524,101,0.607,103,0.607,106,0.028,107,0.028,116,0.951,120,0.896,142,2.463,162,1.288,163,1.773,166,2.132,176,2.579,186,2.681,207,1.263,256,2.495,278,1.707,279,2.619,280,1.86,281,2.067,282,1.86,283,2.317,284,1.86,285,2.317,286,2.317,287,1.682,288,2.067,289,1.86,290,2.317]],["title/interfaces/FieldTypeDefinition.html",[207,1.044,278,0.951]],["body/interfaces/FieldTypeDefinition.html",[0,0.258,3,0.37,4,0.314,7,0.314,29,0.551,33,0.26,34,0.333,40,0.624,41,0.037,48,0.37,51,0.37,80,0.429,85,0.37,101,0.429,103,0.429,106,0.028,107,0.028,116,0.945,120,0.892,142,2.143,162,1.314,166,2.142,176,2.361,186,2.677,207,1.608,256,1.671,278,1.703,279,2.753,280,1.848,281,2.054,282,2.753,283,2.302,284,2.753,285,2.302,286,2.302,287,1.671,288,2.054,289,1.848,290,2.302,291,3.692,292,3.692,293,4.687]],["title/injectables/FieldTypesService.html",[219,1.262,294,1.709]],["body/injectables/FieldTypesService.html",[0,0.225,3,0.237,4,0.201,7,0.201,11,1.672,29,0.237,33,0.166,34,0.245,39,0.548,40,0.909,41,0.038,43,0.778,48,0.508,51,0.237,71,0.446,77,0.446,79,0.523,80,0.624,82,0.523,83,0.915,85,0.237,88,0.839,100,0.523,101,0.563,102,0.523,103,0.637,106,0.02,107,0.02,109,1.672,110,1.672,116,1.404,119,0.731,125,1.672,126,1.672,142,1.99,151,1.428,156,1.428,161,1.069,162,1.24,163,0.882,166,1.402,177,1.069,181,2.276,186,2.752,187,3.16,189,1.182,207,1.866,219,1.428,226,1.866,256,2.483,282,2.276,284,2.276,289,1.182,291,3.218,292,3.218,294,1.934,295,1.672,296,3.218,297,1.672,298,3.383,299,4.508,300,3.445,301,2.342,302,3.445,303,2.342,304,2.851,305,2.167,306,3.445,307,2.918,308,2.918,309,2.918,310,2.918,311,2.342,312,3.73,313,1.672,314,1.672,315,1.672,316,1.672,317,1.938,318,3.218,319,2.46,320,1.938,321,1.938,322,1.938,323,1.938,324,2.46,325,1.938,326,2.851,327,1.938,328,1.938,329,1.938,330,1.938,331,1.473,332,1.938,333,1.672,334,1.938,335,1.938,336,1.938,337,3.022,338,3.218,339,1.938,340,1.938,341,1.938,342,1.938,343,1.938,344,1.938,345,1.938,346,1.938,347,1.672,348,1.938,349,2.342,350,2.342]],["title/components/FormEditor.html",[0,0.152,93,0.58]],["body/components/FormEditor.html",[0,0.207,1,1.009,2,0.667,3,0.242,4,0.205,5,0.56,6,0.56,7,0.205,9,0.56,10,1.251,12,0.74,13,1.89,14,2.09,15,0.456,16,0.456,17,0.456,18,3.049,19,0.74,21,1.217,29,0.242,31,0.819,33,0.17,34,0.249,35,1.716,39,0.56,40,0.408,41,0.037,42,1.768,43,0.788,48,0.528,49,0.902,51,0.242,55,1.071,64,1.505,65,2.865,66,1.208,67,1.343,69,0.618,71,0.456,72,0.56,73,0.819,74,0.56,75,1.066,76,0.56,77,0.867,78,0.56,79,0.363,80,0.28,81,1.066,82,0.363,83,0.456,84,0.456,85,0.242,86,0.56,87,0.456,88,0.83,89,0.56,90,0.456,91,0.819,92,0.56,93,0.867,94,0.56,95,0.56,96,0.867,97,0.456,98,0.56,99,0.56,100,0.363,101,0.28,102,0.363,103,0.28,104,0.506,105,0.56,106,0.021,107,0.021,120,0.788,146,2.09,151,1.45,156,1.45,157,1.598,161,1.598,162,0.875,163,1.319,166,1.562,177,1.093,181,2.3,207,1.201,212,2.3,226,1.093,268,1.343,287,1.093,324,2.955,351,2.865,352,3.252,353,1.98,354,2.897,355,3.425,356,4.139,357,2.955,358,3.252,359,4.139,360,4.139,361,4.139,362,3.425,363,2.955,364,4.139,365,4.139,366,3.425,367,3.501,368,3.501,369,2.897,370,3.501,371,4.554,372,4.01,373,2.393,374,1.98,375,2.393,376,2.393,377,2.393,378,1.709,379,2.393,380,2.393,381,2.393,382,3.501,383,2.393,384,3.501,385,3.501,386,1.98,387,2.393,388,2.393,389,2.393,390,2.393,391,3.501,392,2.393,393,3.501,394,2.393,395,2.393]],["title/components/FormElementMenu.html",[0,0.152,15,0.58]],["body/components/FormElementMenu.html",[0,0.229,1,1.034,2,0.759,3,0.29,4,0.246,5,0.672,6,0.672,7,0.246,9,0.672,10,1.277,12,0.843,15,0.942,16,0.547,17,0.547,18,2.881,19,0.843,21,1.246,29,0.29,31,0.933,33,0.204,34,0.283,39,0.933,40,0.68,41,0.037,43,0.872,48,0.5,49,1.082,51,0.29,55,1.277,56,3.532,57,3.3,64,1.807,65,1.807,69,0.742,71,0.547,72,0.672,73,0.933,74,0.672,75,1.158,76,0.672,77,0.872,78,0.672,79,0.436,80,0.336,81,1.158,82,0.436,83,0.547,84,0.547,85,0.29,86,0.672,87,0.942,88,0.751,89,0.672,90,0.547,91,0.933,92,0.672,93,0.547,94,0.672,95,0.672,96,0.547,97,0.547,98,0.672,99,0.672,100,0.436,101,0.336,102,0.436,103,0.336,104,0.608,105,0.672,106,0.023,107,0.023,146,2.312,151,1.652,156,1.19,161,1.312,162,0.608,163,1.082,197,2.051,199,2.051,219,2.05,222,2.238,226,1.312,231,1.807,232,1.612,288,1.612,298,4.451,312,2.377,318,2.051,396,4.094,397,2.377,398,4.58,399,4.58,400,4.58,401,3.987,402,3.987,403,3.987,404,4.947,405,2.873,406,2.873,407,3.987,408,2.873,409,2.873,410,2.873]],["title/interfaces/FormField.html",[120,0.58,278,0.951]],["body/interfaces/FormField.html",[3,0.365,4,0.31,7,0.31,29,0.548,33,0.257,34,0.33,40,0.616,41,0.037,48,0.365,51,0.365,80,0.423,85,0.365,101,0.423,103,0.423,106,0.027,107,0.027,116,1.401,120,0.979,142,2.381,162,1.303,163,2.045,166,2.156,176,2.564,186,2.669,207,1.24,256,1.65,278,1.695,279,2.348,280,1.825,281,2.029,282,1.825,283,2.274,284,1.825,285,2.274,286,2.274,287,2.478,288,2.885,289,2.74,290,2.274,319,3.67]],["title/components/FormFieldComponent.html",[0,0.152,96,0.58]],["body/components/FormFieldComponent.html",[0,0.221,1,1.026,2,0.728,3,0.273,4,0.232,5,0.633,6,0.633,7,0.232,9,0.633,10,1.267,12,0.808,13,2.024,14,2.238,15,0.515,16,0.515,17,0.515,19,0.808,21,1.192,29,0.273,31,0.894,33,0.192,34,0.271,35,1.815,39,0.894,40,0.652,41,0.037,42,1.93,43,0.968,48,0.56,49,1.019,51,0.273,55,0.938,66,1.365,67,1.518,69,0.698,71,0.515,72,0.633,73,0.894,74,0.633,75,1.128,76,0.633,77,0.844,78,0.633,79,0.41,80,0.317,81,1.128,82,0.41,83,0.515,84,0.515,85,0.273,86,0.633,87,0.515,88,0.885,89,0.633,90,0.917,91,0.894,92,0.633,93,0.515,94,0.633,95,0.633,96,0.917,97,0.515,98,0.633,99,0.633,100,0.41,101,0.317,102,0.41,103,0.317,104,0.572,105,0.633,106,0.022,107,0.022,111,1.365,114,2.145,115,1.745,116,0.698,117,1.12,119,0.844,120,0.515,123,1.518,124,1.019,148,3.668,151,1.584,156,1.12,157,1.235,161,1.235,162,0.572,163,1.019,177,1.235,212,2.664,214,1.518,216,1.701,217,2.238,219,1.996,222,2.145,224,1.701,230,1.701,231,1.701,232,1.518,268,1.518,351,3.319,374,3.668,378,3.767,411,4.433,412,4.433,413,4.433,414,3.163,415,3.163,416,3.822,417,2.704,418,2.704,419,2.704,420,2.704,421,2.704,422,2.704]],["title/components/FormPreview.html",[0,0.152,97,0.58]],["body/components/FormPreview.html",[0,0.238,1,1.043,2,0.799,3,0.313,4,0.265,5,0.725,6,0.725,7,0.265,9,0.725,10,1.289,12,0.888,15,0.59,16,0.59,17,0.59,19,0.888,21,1.228,29,0.313,31,0.982,33,0.22,34,0.298,35,1.924,39,0.725,40,0.528,41,0.037,42,2.12,43,0.59,48,0.516,49,1.167,51,0.313,55,1.007,69,0.799,71,0.59,72,0.725,73,0.982,74,0.725,75,1.195,76,0.725,77,0.799,78,0.725,79,0.47,80,0.363,81,1.195,82,0.47,83,0.59,84,0.59,85,0.313,86,0.725,87,0.59,88,0.81,89,0.725,90,0.972,91,0.982,92,0.725,93,0.59,94,0.725,95,0.725,96,0.59,97,0.972,98,0.725,99,0.725,100,0.47,101,0.363,102,0.47,103,0.363,104,0.655,105,0.725,106,0.025,107,0.025,119,0.967,120,0.59,146,2.779,177,1.414,212,2.12,214,1.738,215,2.21,216,2.996,218,3.474,233,2.562,268,1.738,351,2.641,355,3.941,357,3.4,362,3.941,363,3.4,423,2.997,424,4.763,425,4.763,426,3.096]],["title/interfaces/FormRow.html",[278,0.951,427,1.915]],["body/interfaces/FormRow.html",[3,0.452,4,0.383,7,0.383,29,0.452,33,0.318,34,0.377,41,0.036,48,0.452,88,0.679,106,0.031,107,0.031,120,1.114,162,1.122,166,1.94,278,1.397,280,2.259,287,2.671,427,3.337,428,3.702,429,4.84]],["title/injectables/FormService.html",[35,1.147,294,1.709]],["body/injectables/FormService.html",[0,0.065,1,0.223,3,0.132,4,0.112,7,0.112,10,0.276,11,0.933,12,0.276,13,0.597,14,0.66,19,0.276,21,0.276,29,0.283,33,0.295,34,0.155,35,0.82,37,3.239,39,0.972,40,0.708,41,0.038,43,1.043,48,0.52,49,0.492,50,1.76,51,0.132,71,0.414,77,0.86,85,0.132,88,0.55,106,0.013,107,0.013,112,0.933,120,0.828,129,1.081,130,0.733,131,0.733,135,0.733,151,0.902,156,2.101,157,2.127,159,3.239,161,2.062,162,0.985,163,1.701,166,2.018,172,2.315,177,0.597,181,2.892,189,2.28,219,1.352,222,1.222,224,1.76,226,1.986,232,0.733,236,0.933,238,3,252,1.801,253,2.315,255,1.801,258,3.737,260,1.081,261,1.081,267,1.801,287,0.994,294,1.222,295,0.933,304,1.801,305,0.822,337,3.281,338,3.56,348,1.081,357,1.997,358,2.795,363,2.33,372,3.599,386,1.801,414,1.801,427,1.369,429,3,430,1.081,431,4.516,432,2.798,433,2.798,434,2.798,435,3.915,436,5.072,437,2.177,438,2.7,439,2.177,440,3.263,441,2.798,442,2.177,443,3.263,444,3.263,445,2.798,446,2.177,447,2.177,448,2.177,449,1.307,450,2.177,451,1.307,452,1.307,453,1.307,454,2.177,455,1.307,456,2.177,457,1.307,458,2.177,459,1.307,460,1.307,461,2.177,462,1.307,463,1.307,464,1.307,465,1.307,466,3.263,467,3.263,468,2.798,469,1.307,470,2.177,471,1.307,472,2.177,473,1.307,474,2.177,475,1.307,476,2.798,477,2.177,478,1.307,479,1.307,480,2.177,481,1.307,482,2.177,483,1.307,484,1.307,485,2.177,486,1.307,487,4.782,488,2.177,489,2.177,490,4.151,491,2.798,492,1.307,493,1.307,494,1.307,495,3.105,496,1.307,497,1.081,498,1.307,499,1.307,500,1.307,501,1.307,502,1.307,503,1.307,504,4.151,505,2.177,506,2.177,507,1.307,508,2.795,509,1.307,510,3.915,511,1.307,512,3.625,513,3.625,514,3.625,515,3.625,516,2.177,517,1.307,518,1.307,519,1.307,520,3.263,521,2.177,522,2.798,523,1.307,524,2.177,525,1.307,526,1.307,527,2.177,528,1.307,529,1.307,530,2.177,531,1.307,532,2.798,533,2.177,534,2.177,535,1.307,536,1.307,537,1.307,538,1.307,539,1.307,540,1.307,541,2.177,542,1.307,543,3.263,544,4.349,545,1.307,546,1.307,547,1.307,548,1.307,549,1.307,550,1.081,551,1.307,552,1.307,553,1.307,554,2.177,555,1.307,556,1.307,557,1.307,558,1.307,559,1.307,560,1.307,561,1.307,562,1.307,563,1.307,564,1.307,565,2.177,566,1.307,567,1.307,568,1.307,569,1.307,570,1.307,571,1.081,572,1.307,573,1.307,574,1.307,575,1.307,576,1.307,577,1.307,578,1.307,579,1.307,580,1.307,581,1.307,582,1.307,583,1.307,584,1.307,585,1.081,586,1.307,587,1.307,588,1.307,589,1.307,590,1.307,591,1.307,592,1.307,593,1.307,594,1.307,595,1.307,596,1.307]],["title/components/MainCanvas.html",[0,0.152,16,0.58]],["body/components/MainCanvas.html",[0,0.219,1,0.998,2,0.631,3,0.225,4,0.19,5,0.52,6,0.52,7,0.19,9,0.52,10,1.23,12,0.838,13,1.81,14,2.002,15,0.423,16,0.837,17,0.423,19,0.701,21,1.135,29,0.225,31,0.776,33,0.158,34,0.235,35,1.656,39,0.776,40,0.565,41,0.037,42,1.674,43,0.755,48,0.56,49,0.838,50,1.398,51,0.225,55,0.838,59,3.137,60,3.89,66,1.122,67,1.861,71,0.423,72,0.52,73,0.776,74,0.52,75,1.028,76,0.52,77,0.631,78,0.52,79,0.337,80,0.26,81,1.028,82,0.337,83,0.423,84,0.423,85,0.335,86,0.52,87,0.423,88,0.748,89,0.52,90,0.631,91,0.776,92,0.52,93,0.837,94,0.52,95,0.52,96,0.423,97,0.837,98,1.154,99,0.52,100,0.337,101,0.26,102,0.337,103,0.26,104,0.701,105,0.52,106,0.019,107,0.019,117,1.374,124,0.838,144,3.28,151,1.374,156,0.921,157,1.015,189,2.002,199,3.137,212,2.219,214,1.248,216,3.302,230,1.398,268,1.248,352,1.587,354,4.226,358,3.137,366,1.84,423,1.587,438,3.636,497,3.28,508,3.137,571,3.89,585,3.28,597,1.84,598,3.964,599,4.7,600,4.929,601,3.315,602,3.964,603,2.223,604,3.315,605,2.223,606,2.223,607,2.223,608,2.223,609,3.964,610,4.929,611,2.223,612,1.84,613,2.223,614,2.223,615,2.223,616,2.223,617,2.223,618,3.315,619,3.315,620,2.223,621,2.223,622,3.964,623,2.223,624,2.223,625,2.223,626,2.223,627,4.7,628,4.7,629,3.315,630,2.223,631,2.223,632,2.223,633,3.315,634,2.223,635,2.223,636,2.223,637,2.223,638,2.223,639,3.964,640,1.84,641,2.223,642,3.315,643,2.223,644,2.223,645,2.223,646,2.223,647,2.223,648,2.223,649,2.223,650,2.223,651,2.223,652,2.223,653,2.223,654,2.223,655,2.223,656,2.223]],["title/interfaces/OptionItem.html",[176,1.39,278,0.951]],["body/interfaces/OptionItem.html",[3,0.397,4,0.337,7,0.337,29,0.565,33,0.279,34,0.348,40,0.954,41,0.037,48,0.397,51,0.397,80,0.46,85,0.397,101,0.46,103,0.46,106,0.029,107,0.029,116,1.015,120,0.934,142,2.215,162,1.242,166,2.147,176,2.555,186,2.72,207,1.348,256,1.795,278,1.748,279,2.476,280,1.985,281,2.207,282,1.985,283,2.473,284,1.985,285,2.473,286,2.473,287,1.795,288,2.207,289,1.985,290,2.473]],["title/components/SelectField.html",[0,0.152,100,0.462]],["body/components/SelectField.html",[0,0.233,1,1.039,2,0.779,3,0.301,4,0.255,5,0.697,6,0.697,7,0.255,9,0.697,10,1.283,12,0.865,15,0.567,16,0.567,17,0.567,19,0.865,21,1.063,29,0.301,31,0.957,33,0.212,34,0.29,41,0.037,43,0.779,48,0.508,51,0.301,55,0.988,69,0.769,71,0.567,72,0.697,73,0.957,74,0.697,75,1.176,76,0.697,77,0.779,78,0.697,79,0.452,80,0.349,81,1.176,82,0.452,83,0.567,84,0.567,85,0.301,86,0.697,87,0.567,88,0.893,89,0.697,90,0.567,91,0.957,92,0.697,93,0.567,94,0.697,95,0.697,96,0.567,97,0.567,98,0.697,99,0.697,100,0.763,101,0.637,102,0.452,103,0.349,104,0.63,105,0.697,106,0.024,107,0.024,108,2.358,111,1.505,113,2.621,114,2.296,115,1.867,116,0.769,117,1.235,119,0.931,120,0.567,121,1.673,123,1.673,124,1.123,130,2.296,136,1.673,145,3.334,146,2.358,147,3.334,187,3.622,189,2.358,236,2.92,248,3.864,269,2.466,315,3.334,316,3.334,331,2.937,333,3.334,415,3.384,657,4.669,658,4.669,659,2.98]],["title/components/TextField.html",[0,0.152,102,0.462]],["body/components/TextField.html",[0,0.24,1,1.046,2,0.811,3,0.32,4,0.271,5,0.74,6,0.74,7,0.271,9,0.74,10,1.293,12,0.901,15,0.602,16,0.602,17,0.602,19,0.901,21,1.09,29,0.32,31,0.997,33,0.225,34,0.302,41,0.037,43,0.811,48,0.52,51,0.32,55,1.018,69,0.817,71,0.602,72,0.74,73,0.997,74,0.74,75,1.206,76,0.74,77,0.811,78,0.74,79,0.48,80,0.37,81,1.206,82,0.48,83,0.602,84,0.602,85,0.32,86,0.74,87,0.602,88,0.909,89,0.74,90,0.602,91,0.997,92,0.74,93,0.602,94,0.74,95,0.74,96,0.602,97,0.602,98,0.74,99,0.74,100,0.48,101,0.37,102,0.782,103,0.649,104,0.669,105,0.74,106,0.025,107,0.025,108,2.431,111,1.597,113,2.703,114,2.391,115,1.945,116,0.817,117,1.311,119,0.988,120,0.602,121,1.776,123,1.776,124,1.192,130,2.703,131,2.703,135,1.776,136,1.776,313,3.438,314,3.438,660,4.259]],["title/coverage.html",[661,3.435]],["body/coverage.html",[0,0.301,1,0.524,7,0.263,8,2.544,15,0.585,16,0.585,17,0.585,35,1.158,41,0.037,55,0.884,56,2.195,59,2.195,62,2.195,79,0.467,82,0.467,84,0.585,87,0.585,90,0.585,93,0.585,96,0.585,97,0.585,100,0.467,102,0.467,106,0.025,107,0.025,108,2.688,109,2.195,110,2.195,111,2.688,120,0.585,125,2.195,126,2.195,138,2.983,139,2.544,140,2.195,141,2.544,162,0.65,176,1.404,197,2.195,198,2.544,207,1.055,212,2.688,213,2.544,214,1.726,215,2.983,219,1.274,234,2.544,278,1.663,279,1.552,281,2.858,294,2.345,296,3.801,297,3.801,305,1.934,307,2.195,308,2.195,309,2.195,310,2.195,313,2.195,314,2.195,315,2.195,316,2.195,351,2.985,352,2.195,353,2.544,378,2.195,396,2.544,397,2.544,423,2.195,427,1.934,428,2.544,430,2.544,495,2.195,508,4.467,597,2.544,661,2.544,662,3.074,663,3.074,664,3.074,665,2.544,666,5.492,667,2.544,668,5.492,669,5.618,670,4.178,671,5.324,672,4.178,673,3.074,674,3.074,675,4.178,676,3.074,677,2.544,678,2.544,679,3.074,680,3.074]],["title/dependencies.html",[681,2.106,682,3.029]],["body/dependencies.html",[41,0.037,51,0.446,53,3.656,106,0.031,107,0.031,178,3.154,230,2.779,612,3.656,682,3.656,683,4.417,684,4.417,685,5.265,686,6.038,687,4.417,688,4.417,689,4.417,690,3.656,691,4.417,692,4.417,693,4.417,694,4.417,695,4.417,696,4.417,697,4.417,698,4.417]],["title/index.html",[33,0.181,699,2.545,700,2.545]],["body/index.html",[0,0.254,2,0.676,4,0.304,20,4.46,39,1.075,41,0.027,104,0.751,106,0.027,107,0.027,305,2.232,337,2.89,347,2.533,369,2.936,550,2.936,640,3.802,690,2.936,701,3.548,702,5.096,703,5.582,704,2.936,705,3.548,706,4.595,707,5.096,708,3.548,709,3.548,710,5.582,711,5.719,712,5.719,713,3.548,714,4.595,715,3.548,716,3.548,717,3.548,718,4.595,719,3.548,720,3.548,721,3.548,722,3.548,723,3.548,724,4.595,725,3.548,726,3.548,727,3.548,728,5.096,729,3.548,730,3.548,731,3.548,732,3.548,733,3.548,734,3.548,735,3.548,736,3.548,737,5.096,738,3.548,739,3.548,740,3.548,741,3.548,742,3.548,743,3.548,744,3.548,745,3.548,746,3.548,747,3.548,748,4.595,749,5.096,750,3.548,751,3.548,752,3.548,753,3.548,754,3.548,755,5.096,756,3.548,757,5.719,758,3.548,759,4.595,760,3.548,761,3.548,762,3.548,763,3.548,764,3.548,765,3.548,766,3.548,767,3.548,768,3.548,769,3.548,770,3.548,771,3.548,772,3.548,773,3.548,774,2.533,775,3.548,776,3.548]],["title/modules.html",[777,3.435]],["body/modules.html",[41,0.033,106,0.033,107,0.033,777,4.066]],["title/overview.html",[774,2.963]],["body/overview.html",[2,0.92,41,0.033,106,0.033,107,0.033,280,2.44,295,3.45,331,3.04,774,3.45,778,4.832,779,4.832]],["title/properties.html",[34,0.26,681,2.106]],["body/properties.html",[34,0.346,41,0.034,106,0.033,107,0.033,704,4.032,780,4.873]],["title/miscellaneous/variables.html",[781,2.106,782,3.029]],["body/miscellaneous/variables.html",[0,0.233,33,0.179,39,1.207,40,0.991,41,0.038,79,0.384,80,0.604,82,0.384,83,0.813,85,0.368,88,0.783,100,0.384,101,0.5,102,0.384,103,0.623,106,0.021,107,0.021,116,1.431,119,0.789,127,2.092,142,2.052,157,1.154,162,1.273,186,2.776,187,3.246,189,1.276,207,1.603,226,1.663,256,2.532,282,2.36,284,2.36,289,1.276,291,3.336,292,3.336,296,1.805,297,3.536,307,2.601,308,2.601,309,2.601,310,2.601,317,2.092,318,3.336,319,2.601,320,2.092,321,2.092,322,2.092,323,2.092,324,2.601,325,2.092,326,3.015,327,2.092,328,2.092,329,2.092,330,2.092,331,1.59,332,2.092,333,1.805,334,2.092,335,2.092,336,2.092,337,3.116,338,3.336,339,2.092,340,2.092,341,2.092,342,2.092,343,2.092,344,2.092,345,2.092,346,2.092,347,1.805,495,2.601,665,2.092,667,3.015,677,2.092,678,3.015,781,2.092,782,2.092,783,2.528,784,4.673,785,2.528,786,2.528,787,2.528,788,2.528,789,2.528,790,2.528,791,2.528,792,2.528,793,2.528,794,2.528,795,2.528,796,2.528,797,3.643,798,2.528,799,2.528,800,2.528,801,2.528]]],"invertedIndex":[["",{"_index":41,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"interfaces/FormField.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"interfaces/FormRow.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{},"interfaces/OptionItem.html":{},"components/SelectField.html":{},"components/TextField.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":508,"title":{},"body":{"injectables/FormService.html":{},"components/MainCanvas.html":{},"coverage.html":{}}}],["0.0.0",{"_index":780,"title":{},"body":{"properties.html":{}}}],["0/1",{"_index":668,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":674,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":676,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":669,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":671,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":672,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":673,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":670,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":675,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":645,"title":{},"body":{"components/MainCanvas.html":{}}}],["1",{"_index":189,"title":{},"body":{"components/DynamicOptions.html":{},"injectables/FieldTypesService.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"miscellaneous/variables.html":{}}}],["14",{"_index":778,"title":{},"body":{"overview.html":{}}}],["1\\n",{"_index":342,"title":{},"body":{"injectables/FieldTypesService.html":{},"miscellaneous/variables.html":{}}}],["2",{"_index":331,"title":{},"body":{"injectables/FieldTypesService.html":{},"components/SelectField.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["20.1.0",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["20.1.4",{"_index":705,"title":{},"body":{"index.html":{}}}],["20.1.6",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["20.1.7",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["2\\n",{"_index":343,"title":{},"body":{"injectables/FieldTypesService.html":{},"miscellaneous/variables.html":{}}}],["3",{"_index":333,"title":{},"body":{"injectables/FieldTypesService.html":{},"components/SelectField.html":{},"miscellaneous/variables.html":{}}}],["3\\n",{"_index":344,"title":{},"body":{"injectables/FieldTypesService.html":{},"miscellaneous/variables.html":{}}}],["4.1.12",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":779,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["8.5.6",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["_rows",{"_index":432,"title":{},"body":{"injectables/FormService.html":{}}}],["_selectedfieldid",{"_index":433,"title":{},"body":{"injectables/FormService.html":{}}}],["activetab",{"_index":602,"title":{},"body":{"components/MainCanvas.html":{}}}],["actual_component",{"_index":105,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["add",{"_index":599,"title":{},"body":{"components/MainCanvas.html":{}}}],["add_circle",{"_index":144,"title":{},"body":{"components/DynamicOptions.html":{},"components/MainCanvas.html":{}}}],["addfield",{"_index":437,"title":{},"body":{"injectables/FormService.html":{}}}],["addfield(field",{"_index":450,"title":{},"body":{"injectables/FormService.html":{}}}],["additional",{"_index":766,"title":{},"body":{"index.html":{}}}],["addoption",{"_index":152,"title":{},"body":{"components/DynamicOptions.html":{}}}],["addrow",{"_index":438,"title":{},"body":{"injectables/FormService.html":{},"components/MainCanvas.html":{}}}],["allow",{"_index":641,"title":{},"body":{"components/MainCanvas.html":{}}}],["angular",{"_index":20,"title":{},"body":{"components/App.html":{},"index.html":{}}}],["angular/animations",{"_index":612,"title":{},"body":{"components/MainCanvas.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/drag",{"_index":64,"title":{},"body":{"components/App.html":{},"components/FieldButton.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{}}}],["angular/common",{"_index":230,"title":{},"body":{"components/FieldPreview.html":{},"components/FormFieldComponent.html":{},"components/MainCanvas.html":{},"dependencies.html":{}}}],["angular/common';\\n",{"_index":572,"title":{},"body":{"injectables/FormService.html":{}}}],["angular/compiler",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":51,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"interfaces/FormField.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{},"interfaces/OptionItem.html":{},"components/SelectField.html":{},"components/TextField.html":{},"dependencies.html":{}}}],["angular/core';\\n",{"_index":570,"title":{},"body":{"injectables/FormService.html":{}}}],["angular/forms",{"_index":178,"title":{},"body":{"components/DynamicOptions.html":{},"components/FieldSettings.html":{},"dependencies.html":{}}}],["angular/material",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":67,"title":{},"body":{"components/App.html":{},"components/DynamicOptions.html":{},"components/FormEditor.html":{},"components/FormFieldComponent.html":{},"components/MainCanvas.html":{}}}],["angular/material/button';\\n",{"_index":574,"title":{},"body":{"injectables/FormService.html":{}}}],["angular/material/checkbox",{"_index":122,"title":{},"body":{"components/CheckboxField.html":{},"components/FieldSettings.html":{}}}],["angular/material/checkbox';\\n",{"_index":578,"title":{},"body":{"injectables/FormService.html":{}}}],["angular/material/core",{"_index":137,"title":{},"body":{"components/DateField.html":{}}}],["angular/material/datepicker",{"_index":134,"title":{},"body":{"components/DateField.html":{}}}],["angular/material/datepicker';\\n\\n",{"_index":581,"title":{},"body":{"injectables/FormService.html":{}}}],["angular/material/form",{"_index":135,"title":{},"body":{"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldSettings.html":{},"injectables/FormService.html":{},"components/TextField.html":{}}}],["angular/material/icon",{"_index":66,"title":{},"body":{"components/App.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FormEditor.html":{},"components/FormFieldComponent.html":{},"components/MainCanvas.html":{}}}],["angular/material/icon';\\n",{"_index":575,"title":{},"body":{"injectables/FormService.html":{}}}],["angular/material/input",{"_index":136,"title":{},"body":{"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldSettings.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["angular/material/input';\\n",{"_index":573,"title":{},"body":{"injectables/FormService.html":{}}}],["angular/material/radio';\\n",{"_index":580,"title":{},"body":{"injectables/FormService.html":{}}}],["angular/material/select",{"_index":269,"title":{},"body":{"components/FieldSettings.html":{},"components/SelectField.html":{}}}],["angular/material/select';\\n",{"_index":577,"title":{},"body":{"injectables/FormService.html":{}}}],["angular/platform",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":53,"title":{},"body":{"components/App.html":{},"dependencies.html":{}}}],["animate",{"_index":611,"title":{},"body":{"components/MainCanvas.html":{}}}],["animate('200ms",{"_index":651,"title":{},"body":{"components/MainCanvas.html":{}}}],["animate('300ms",{"_index":632,"title":{},"body":{"components/MainCanvas.html":{}}}],["animation",{"_index":618,"title":{},"body":{"components/MainCanvas.html":{}}}],["animations",{"_index":617,"title":{},"body":{"components/MainCanvas.html":{}}}],["app",{"_index":1,"title":{"components/App.html":{}},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{},"coverage.html":{}}}],["app.html",{"_index":70,"title":{},"body":{"components/App.html":{}}}],["app.scss",{"_index":32,"title":{},"body":{"components/App.html":{}}}],["appconfig",{"_index":667,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appearance",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":718,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicationref",{"_index":493,"title":{},"body":{"injectables/FormService.html":{}}}],["appref",{"_index":434,"title":{},"body":{"injectables/FormService.html":{}}}],["area",{"_index":624,"title":{},"body":{"components/MainCanvas.html":{}}}],["array",{"_index":615,"title":{},"body":{"components/MainCanvas.html":{}}}],["array.from(this.fieldtypes.values",{"_index":350,"title":{},"body":{"injectables/FieldTypesService.html":{}}}],["arrow_drop_down_circle",{"_index":328,"title":{},"body":{"injectables/FieldTypesService.html":{},"miscellaneous/variables.html":{}}}],["artifacts",{"_index":741,"title":{},"body":{"index.html":{}}}],["assuming",{"_index":613,"title":{},"body":{"components/MainCanvas.html":{}}}],["automatically",{"_index":719,"title":{},"body":{"index.html":{}}}],["available",{"_index":732,"title":{},"body":{"index.html":{}}}],["based",{"_index":614,"title":{},"body":{"components/MainCanvas.html":{}}}],["beautiful",{"_index":24,"title":{},"body":{"components/App.html":{}}}],["between",{"_index":648,"title":{},"body":{"components/MainCanvas.html":{}}}],["blob",{"_index":551,"title":{},"body":{"injectables/FormService.html":{}}}],["blob([formcode",{"_index":552,"title":{},"body":{"injectables/FormService.html":{}}}],["boolean",{"_index":288,"title":{},"body":{"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"components/FormElementMenu.html":{},"interfaces/FormField.html":{},"interfaces/OptionItem.html":{}}}],["browser",{"_index":690,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["build",{"_index":737,"title":{},"body":{"index.html":{}}}],["builder",{"_index":46,"title":{},"body":{"components/App.html":{}}}],["buildthis",{"_index":738,"title":{},"body":{"index.html":{}}}],["button",{"_index":199,"title":{},"body":{"components/FieldButton.html":{},"components/FormElementMenu.html":{},"components/MainCanvas.html":{}}}],["button'},{'name",{"_index":89,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["button.html",{"_index":209,"title":{},"body":{"components/FieldButton.html":{}}}],["button.scss",{"_index":202,"title":{},"body":{"components/FieldButton.html":{}}}],["button.ts",{"_index":198,"title":{},"body":{"components/FieldButton.html":{},"coverage.html":{}}}],["button.ts:36",{"_index":204,"title":{},"body":{"components/FieldButton.html":{}}}],["button.ts:37",{"_index":206,"title":{},"body":{"components/FieldButton.html":{}}}],["button/field",{"_index":197,"title":{},"body":{"components/FieldButton.html":{},"components/FormElementMenu.html":{},"coverage.html":{}}}],["callback",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["called",{"_index":653,"title":{},"body":{"components/MainCanvas.html":{}}}],["canvas",{"_index":60,"title":{},"body":{"components/App.html":{},"components/MainCanvas.html":{}}}],["canvas'},{'name",{"_index":99,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["canvas.scss",{"_index":601,"title":{},"body":{"components/MainCanvas.html":{}}}],["canvas.ts",{"_index":597,"title":{},"body":{"components/MainCanvas.html":{},"coverage.html":{}}}],["canvas.ts:102",{"_index":605,"title":{},"body":{"components/MainCanvas.html":{}}}],["canvas.ts:103",{"_index":606,"title":{},"body":{"components/MainCanvas.html":{}}}],["canvas.ts:105",{"_index":603,"title":{},"body":{"components/MainCanvas.html":{}}}],["canvas/field",{"_index":213,"title":{},"body":{"components/FieldPreview.html":{},"coverage.html":{}}}],["canvas/form",{"_index":351,"title":{},"body":{"components/FormEditor.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"coverage.html":{}}}],["canvas/main",{"_index":59,"title":{},"body":{"components/App.html":{},"components/MainCanvas.html":{},"coverage.html":{}}}],["case('checkbox",{"_index":245,"title":{},"body":{"components/FieldSettings.html":{}}}],["case('dynamic",{"_index":249,"title":{},"body":{"components/FieldSettings.html":{}}}],["case('select",{"_index":246,"title":{},"body":{"components/FieldSettings.html":{}}}],["case('text",{"_index":243,"title":{},"body":{"components/FieldSettings.html":{}}}],["case(\\'checkbox",{"_index":275,"title":{},"body":{"components/FieldSettings.html":{}}}],["case(\\'dynamic",{"_index":277,"title":{},"body":{"components/FieldSettings.html":{}}}],["case(\\'select",{"_index":276,"title":{},"body":{"components/FieldSettings.html":{}}}],["case(\\'text",{"_index":274,"title":{},"body":{"components/FieldSettings.html":{}}}],["cdkdrag",{"_index":404,"title":{},"body":{"components/FormElementMenu.html":{}}}],["cdkdragdrop",{"_index":371,"title":{},"body":{"components/FormEditor.html":{}}}],["check_box",{"_index":325,"title":{},"body":{"injectables/FieldTypesService.html":{},"miscellaneous/variables.html":{}}}],["checkbox",{"_index":80,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"interfaces/FormField.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"interfaces/OptionItem.html":{},"components/SelectField.html":{},"components/TextField.html":{},"miscellaneous/variables.html":{}}}],["checkbox_field_definition",{"_index":308,"title":{},"body":{"injectables/FieldTypesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["checkboxfield",{"_index":79,"title":{"components/CheckboxField.html":{}},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["choose",{"_index":347,"title":{},"body":{"injectables/FieldTypesService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":71,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["cli",{"_index":703,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":654,"title":{},"body":{"components/MainCanvas.html":{}}}],["close",{"_index":359,"title":{},"body":{"components/FormEditor.html":{}}}],["code",{"_index":337,"title":{},"body":{"injectables/FieldTypesService.html":{},"injectables/FormService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["come",{"_index":761,"title":{},"body":{"index.html":{}}}],["command",{"_index":755,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":571,"title":{},"body":{"injectables/FormService.html":{},"components/MainCanvas.html":{}}}],["commonmodule,\\n",{"_index":587,"title":{},"body":{"injectables/FormService.html":{}}}],["compile",{"_index":739,"title":{},"body":{"index.html":{}}}],["complete",{"_index":730,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"interfaces/FieldTypeDefinition.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component({\\n",{"_index":583,"title":{},"body":{"injectables/FormService.html":{}}}],["component:type",{"_index":285,"title":{},"body":{"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"interfaces/FormField.html":{},"interfaces/OptionItem.html":{}}}],["component_template",{"_index":76,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{},"index.html":{},"overview.html":{}}}],["computed",{"_index":224,"title":{},"body":{"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormFieldComponent.html":{},"injectables/FormService.html":{}}}],["console.log('startviewtransition",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(fielddef",{"_index":262,"title":{},"body":{"components/FieldSettings.html":{}}}],["console.log(formcode",{"_index":549,"title":{},"body":{"injectables/FormService.html":{}}}],["console.log(newfield",{"_index":389,"title":{},"body":{"components/FormEditor.html":{}}}],["console.log(row",{"_index":381,"title":{},"body":{"components/FormEditor.html":{}}}],["console.log(this._rows(),\"_rows",{"_index":499,"title":{},"body":{"injectables/FormService.html":{}}}],["console.log(this._rows().flatmap(row",{"_index":500,"title":{},"body":{"injectables/FormService.html":{}}}],["console.log(this.fieldsettings",{"_index":271,"title":{},"body":{"components/FieldSettings.html":{}}}],["console.log(this.rows,\"readonly",{"_index":498,"title":{},"body":{"injectables/FormService.html":{}}}],["console.log(this.selectedfield",{"_index":502,"title":{},"body":{"injectables/FormService.html":{}}}],["const",{"_index":181,"title":{},"body":{"components/DynamicOptions.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"injectables/FormService.html":{}}}],["constructor",{"_index":253,"title":{},"body":{"components/FieldSettings.html":{},"injectables/FormService.html":{}}}],["content",{"_index":623,"title":{},"body":{"components/MainCanvas.html":{}}}],["coverage",{"_index":661,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["coxcrhrh",{"_index":175,"title":{},"body":{"components/DynamicOptions.html":{}}}],["create",{"_index":23,"title":{},"body":{"components/App.html":{}}}],["crypto.randomuuid",{"_index":386,"title":{},"body":{"components/FormEditor.html":{},"injectables/FormService.html":{}}}],["currentoptions",{"_index":182,"title":{},"body":{"components/DynamicOptions.html":{}}}],["data",{"_index":476,"title":{},"body":{"injectables/FormService.html":{}}}],["data:partial",{"_index":538,"title":{},"body":{"injectables/FormService.html":{}}}],["date",{"_index":83,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{},"miscellaneous/variables.html":{}}}],["date_field_definition",{"_index":310,"title":{},"body":{"injectables/FieldTypesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_range",{"_index":346,"title":{},"body":{"injectables/FieldTypesService.html":{},"miscellaneous/variables.html":{}}}],["datefield",{"_index":82,"title":{"components/DateField.html":{}},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default",{"_index":39,"title":{},"body":{"components/App.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaultconfig",{"_index":291,"title":{},"body":{"interfaces/FieldTypeDefinition.html":{},"injectables/FieldTypesService.html":{},"miscellaneous/variables.html":{}}}],["defaultconfig:any",{"_index":283,"title":{},"body":{"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"interfaces/FormField.html":{},"interfaces/OptionItem.html":{}}}],["defined",{"_index":43,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["delete",{"_index":148,"title":{},"body":{"components/DynamicOptions.html":{},"components/FormFieldComponent.html":{}}}],["deletefield",{"_index":414,"title":{},"body":{"components/FormFieldComponent.html":{},"injectables/FormService.html":{}}}],["deletefield(e",{"_index":416,"title":{},"body":{"components/FormFieldComponent.html":{}}}],["deletefield(fieldid",{"_index":454,"title":{},"body":{"injectables/FormService.html":{}}}],["deleterow",{"_index":439,"title":{},"body":{"injectables/FormService.html":{}}}],["deleterow(nowid",{"_index":456,"title":{},"body":{"injectables/FormService.html":{}}}],["dependencies",{"_index":682,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["designer",{"_index":22,"title":{},"body":{"components/App.html":{}}}],["detailed",{"_index":771,"title":{},"body":{"index.html":{}}}],["development",{"_index":706,"title":{},"body":{"index.html":{}}}],["directive",{"_index":74,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["directives",{"_index":104,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{},"index.html":{}}}],["directory",{"_index":743,"title":{},"body":{"index.html":{}}}],["dist",{"_index":742,"title":{},"body":{"index.html":{}}}],["document.createelement('a",{"_index":557,"title":{},"body":{"injectables/FormService.html":{}}}],["document.startviewtransition",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document.startviewtransition(callback",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":662,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["download",{"_index":30,"title":{},"body":{"components/App.html":{}}}],["drag",{"_index":365,"title":{},"body":{"components/FormEditor.html":{}}}],["dragdata",{"_index":392,"title":{},"body":{"components/FormEditor.html":{}}}],["dragdata.id",{"_index":395,"title":{},"body":{"components/FormEditor.html":{}}}],["dragdropmodule",{"_index":18,"title":{},"body":{"components/App.html":{},"components/FieldButton.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{}}}],["drop",{"_index":65,"title":{},"body":{"components/App.html":{},"components/FieldButton.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{}}}],["dropdown",{"_index":327,"title":{},"body":{"injectables/FieldTypesService.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":85,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"interfaces/FormField.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{},"interfaces/OptionItem.html":{},"components/SelectField.html":{},"components/TextField.html":{},"miscellaneous/variables.html":{}}}],["dynamicformbuilder",{"_index":701,"title":{},"body":{"index.html":{}}}],["dynamicoptions",{"_index":84,"title":{"components/DynamicOptions.html":{}},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{},"coverage.html":{}}}],["e",{"_index":418,"title":{},"body":{"components/FormFieldComponent.html":{}}}],["e.stoppropagation",{"_index":421,"title":{},"body":{"components/FormFieldComponent.html":{}}}],["e2e",{"_index":758,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":760,"title":{},"body":{"index.html":{}}}],["ease",{"_index":633,"title":{},"body":{"components/MainCanvas.html":{}}}],["editor",{"_index":354,"title":{},"body":{"components/FormEditor.html":{},"components/MainCanvas.html":{}}}],["editor'},{'name",{"_index":94,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["editor.html",{"_index":379,"title":{},"body":{"components/FormEditor.html":{}}}],["editor.scss",{"_index":367,"title":{},"body":{"components/FormEditor.html":{}}}],["editor.ts",{"_index":353,"title":{},"body":{"components/FormEditor.html":{},"coverage.html":{}}}],["editor.ts:66",{"_index":376,"title":{},"body":{"components/FormEditor.html":{}}}],["editor.ts:69",{"_index":377,"title":{},"body":{"components/FormEditor.html":{}}}],["editor.ts:70",{"_index":373,"title":{},"body":{"components/FormEditor.html":{}}}],["editor/form",{"_index":352,"title":{},"body":{"components/FormEditor.html":{},"components/MainCanvas.html":{},"coverage.html":{}}}],["effect",{"_index":267,"title":{},"body":{"components/FieldSettings.html":{},"injectables/FormService.html":{}}}],["element",{"_index":55,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{},"coverage.html":{}}}],["elements",{"_index":398,"title":{},"body":{"components/FormElementMenu.html":{}}}],["email',label:'email",{"_index":322,"title":{},"body":{"injectables/FieldTypesService.html":{},"miscellaneous/variables.html":{}}}],["empty",{"_index":364,"title":{},"body":{"components/FormEditor.html":{}}}],["end",{"_index":757,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":513,"title":{},"body":{"injectables/FormService.html":{}}}],["event",{"_index":374,"title":{},"body":{"components/FormEditor.html":{},"components/FormFieldComponent.html":{}}}],["event.currentindex",{"_index":391,"title":{},"body":{"components/FormEditor.html":{}}}],["event.item.data",{"_index":384,"title":{},"body":{"components/FormEditor.html":{}}}],["event.previouscontainer.data",{"_index":382,"title":{},"body":{"components/FormEditor.html":{}}}],["example",{"_index":711,"title":{},"body":{"index.html":{}}}],["execute",{"_index":750,"title":{},"body":{"index.html":{}}}],["export",{"_index":29,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"interfaces/FormField.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"interfaces/FormRow.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{},"interfaces/OptionItem.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["exportform",{"_index":440,"title":{},"body":{"injectables/FormService.html":{}}}],["f",{"_index":172,"title":{},"body":{"components/DynamicOptions.html":{},"injectables/FormService.html":{}}}],["f.id",{"_index":490,"title":{},"body":{"injectables/FormService.html":{}}}],["fade",{"_index":620,"title":{},"body":{"components/MainCanvas.html":{}}}],["false",{"_index":318,"title":{},"body":{"injectables/FieldTypesService.html":{},"components/FormElementMenu.html":{},"miscellaneous/variables.html":{}}}],["feature/components/field",{"_index":61,"title":{},"body":{"components/App.html":{}}}],["feature/components/form",{"_index":54,"title":{},"body":{"components/App.html":{}}}],["feature/components/main",{"_index":58,"title":{},"body":{"components/App.html":{}}}],["feature/models/field",{"_index":121,"title":{},"body":{"components/CheckboxField.html":{},"components/DateField.html":{},"components/FieldButton.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["feature/services/form.service",{"_index":68,"title":{},"body":{"components/App.html":{}}}],["field",{"_index":88,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"interfaces/FormRow.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{},"miscellaneous/variables.html":{}}}],["field';\\n",{"_index":576,"title":{},"body":{"injectables/FormService.html":{}}}],["field'},{'name",{"_index":81,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["field().icon",{"_index":200,"title":{},"body":{"components/FieldButton.html":{}}}],["field().icon}}{{field().label",{"_index":211,"title":{},"body":{"components/FieldButton.html":{}}}],["field().icon}}{{field().label}}@if(whiledragging",{"_index":210,"title":{},"body":{"components/FieldButton.html":{}}}],["field().label",{"_index":113,"title":{},"body":{"components/CheckboxField.html":{},"components/DateField.html":{},"components/FieldButton.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["field().options",{"_index":658,"title":{},"body":{"components/SelectField.html":{}}}],["field().type",{"_index":412,"title":{},"body":{"components/FormFieldComponent.html":{}}}],["field.html",{"_index":123,"title":{},"body":{"components/CheckboxField.html":{},"components/DateField.html":{},"components/FormFieldComponent.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["field.id",{"_index":425,"title":{},"body":{"components/FormPreview.html":{}}}],["field.label",{"_index":324,"title":{},"body":{"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"miscellaneous/variables.html":{}}}],["field.label}\\n",{"_index":326,"title":{},"body":{"injectables/FieldTypesService.html":{},"miscellaneous/variables.html":{}}}],["field.options.foreach(option",{"_index":340,"title":{},"body":{"injectables/FieldTypesService.html":{},"miscellaneous/variables.html":{}}}],["field.scss",{"_index":114,"title":{},"body":{"components/CheckboxField.html":{},"components/DateField.html":{},"components/FormFieldComponent.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["field.ts",{"_index":111,"title":{},"body":{"components/CheckboxField.html":{},"components/DateField.html":{},"components/FormFieldComponent.html":{},"components/SelectField.html":{},"components/TextField.html":{},"coverage.html":{}}}],["field.ts:16",{"_index":118,"title":{},"body":{"components/CheckboxField.html":{}}}],["field.ts:23",{"_index":660,"title":{},"body":{"components/TextField.html":{}}}],["field.ts:27",{"_index":133,"title":{},"body":{"components/DateField.html":{}}}],["field.ts:29",{"_index":415,"title":{},"body":{"components/FormFieldComponent.html":{},"components/SelectField.html":{}}}],["field.ts:30",{"_index":420,"title":{},"body":{"components/FormFieldComponent.html":{}}}],["field.ts:31",{"_index":419,"title":{},"body":{"components/FormFieldComponent.html":{}}}],["field.ts:33",{"_index":417,"title":{},"body":{"components/FormFieldComponent.html":{}}}],["field/checkbox",{"_index":110,"title":{},"body":{"components/CheckboxField.html":{},"injectables/FieldTypesService.html":{},"coverage.html":{}}}],["field/date",{"_index":126,"title":{},"body":{"components/DateField.html":{},"injectables/FieldTypesService.html":{},"coverage.html":{}}}],["field/form",{"_index":378,"title":{},"body":{"components/FormEditor.html":{},"components/FormFieldComponent.html":{},"coverage.html":{}}}],["field/select",{"_index":316,"title":{},"body":{"injectables/FieldTypesService.html":{},"components/SelectField.html":{},"coverage.html":{}}}],["field/text",{"_index":314,"title":{},"body":{"injectables/FieldTypesService.html":{},"components/TextField.html":{},"coverage.html":{}}}],["fieldbutton",{"_index":87,"title":{"components/FieldButton.html":{}},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{},"coverage.html":{}}}],["fielddef",{"_index":260,"title":{},"body":{"components/FieldSettings.html":{},"injectables/FormService.html":{}}}],["fielddef?.generatecode(field",{"_index":569,"title":{},"body":{"injectables/FormService.html":{}}}],["fielddef?.settingsconfig",{"_index":263,"title":{},"body":{"components/FieldSettings.html":{}}}],["fieldid",{"_index":258,"title":{},"body":{"components/FieldSettings.html":{},"injectables/FormService.html":{}}}],["fieldpreview",{"_index":90,"title":{"components/FieldPreview.html":{}},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{},"coverage.html":{}}}],["fields",{"_index":429,"title":{},"body":{"interfaces/FormRow.html":{},"injectables/FormService.html":{}}}],["fieldsettings",{"_index":17,"title":{"components/FieldSettings.html":{}},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{},"coverage.html":{}}}],["fieldsettingsdefinition",{"_index":279,"title":{"interfaces/FieldSettingsDefinition.html":{}},"body":{"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"interfaces/FormField.html":{},"interfaces/OptionItem.html":{},"coverage.html":{}}}],["fieldswithremovedfieldid",{"_index":527,"title":{},"body":{"injectables/FormService.html":{}}}],["fieldtomove",{"_index":520,"title":{},"body":{"injectables/FormService.html":{}}}],["fieldtype",{"_index":383,"title":{},"body":{"components/FormEditor.html":{}}}],["fieldtype.defaultconfig",{"_index":388,"title":{},"body":{"components/FormEditor.html":{}}}],["fieldtype.type",{"_index":387,"title":{},"body":{"components/FormEditor.html":{}}}],["fieldtypedefinition",{"_index":207,"title":{"interfaces/FieldTypeDefinition.html":{}},"body":{"components/FieldButton.html":{},"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"interfaces/FormField.html":{},"interfaces/OptionItem.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fieldtypes",{"_index":298,"title":{},"body":{"injectables/FieldTypesService.html":{},"components/FormElementMenu.html":{}}}],["fieldtypesservice",{"_index":219,"title":{"injectables/FieldTypesService.html":{}},"body":{"components/FieldPreview.html":{},"components/FieldSettings.html":{},"injectables/FieldTypesService.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"injectables/FormService.html":{},"coverage.html":{}}}],["fieldvalues",{"_index":251,"title":{},"body":{"components/FieldSettings.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"interfaces/FormField.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"interfaces/FormRow.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{},"interfaces/OptionItem.html":{},"components/SelectField.html":{},"components/TextField.html":{},"coverage.html":{}}}],["files",{"_index":723,"title":{},"body":{"index.html":{}}}],["find((f",{"_index":489,"title":{},"body":{"injectables/FormService.html":{}}}],["flatmap((row",{"_index":488,"title":{},"body":{"injectables/FormService.html":{}}}],["following",{"_index":754,"title":{},"body":{"index.html":{}}}],["for(const",{"_index":565,"title":{},"body":{"injectables/FormService.html":{}}}],["for(field",{"_index":362,"title":{},"body":{"components/FormEditor.html":{},"components/FormPreview.html":{}}}],["for(option",{"_index":145,"title":{},"body":{"components/DynamicOptions.html":{},"components/FieldSettings.html":{},"components/SelectField.html":{}}}],["for(row",{"_index":355,"title":{},"body":{"components/FormEditor.html":{},"components/FormPreview.html":{}}}],["for(setting",{"_index":239,"title":{},"body":{"components/FieldSettings.html":{}}}],["for(type",{"_index":399,"title":{},"body":{"components/FormElementMenu.html":{}}}],["form",{"_index":21,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["form',\\n",{"_index":584,"title":{},"body":{"injectables/FormService.html":{}}}],["form.ts",{"_index":560,"title":{},"body":{"injectables/FormService.html":{}}}],["formcode",{"_index":547,"title":{},"body":{"injectables/FormService.html":{}}}],["formeditor",{"_index":93,"title":{"components/FormEditor.html":{}},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{},"coverage.html":{}}}],["formelementmenu",{"_index":15,"title":{"components/FormElementMenu.html":{}},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{},"coverage.html":{}}}],["formfield",{"_index":120,"title":{"interfaces/FormField.html":{}},"body":{"components/CheckboxField.html":{},"components/DateField.html":{},"components/FieldPreview.html":{},"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"components/FormEditor.html":{},"interfaces/FormField.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"interfaces/FormRow.html":{},"injectables/FormService.html":{},"interfaces/OptionItem.html":{},"components/SelectField.html":{},"components/TextField.html":{},"coverage.html":{}}}],["formfieldcomponent",{"_index":96,"title":{"components/FormFieldComponent.html":{}},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{},"coverage.html":{}}}],["formpreview",{"_index":97,"title":{"components/FormPreview.html":{}},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{},"coverage.html":{}}}],["formrow",{"_index":427,"title":{"interfaces/FormRow.html":{}},"body":{"interfaces/FormRow.html":{},"injectables/FormService.html":{},"coverage.html":{}}}],["forms",{"_index":26,"title":{},"body":{"components/App.html":{}}}],["formservice",{"_index":35,"title":{"injectables/FormService.html":{}},"body":{"components/App.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{},"coverage.html":{}}}],["formservice.rows",{"_index":424,"title":{},"body":{"components/FormPreview.html":{}}}],["formservice.rows();track",{"_index":356,"title":{},"body":{"components/FormEditor.html":{}}}],["formsmodule",{"_index":143,"title":{},"body":{"components/DynamicOptions.html":{},"components/FieldSettings.html":{}}}],["framework",{"_index":762,"title":{},"body":{"index.html":{}}}],["function",{"_index":293,"title":{},"body":{"interfaces/FieldTypeDefinition.html":{}}}],["functionality",{"_index":546,"title":{},"body":{"injectables/FormService.html":{}}}],["generate",{"_index":728,"title":{},"body":{"index.html":{}}}],["generatecode",{"_index":292,"title":{},"body":{"interfaces/FieldTypeDefinition.html":{},"injectables/FieldTypesService.html":{},"miscellaneous/variables.html":{}}}],["generatecode:(field",{"_index":286,"title":{},"body":{"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"interfaces/FormField.html":{},"interfaces/OptionItem.html":{}}}],["generatecomponentdecorator",{"_index":441,"title":{},"body":{"injectables/FormService.html":{}}}],["generatecomponentdecorator():string",{"_index":582,"title":{},"body":{"injectables/FormService.html":{}}}],["generated",{"_index":550,"title":{},"body":{"injectables/FormService.html":{},"index.html":{}}}],["generatedformcomponent",{"_index":568,"title":{},"body":{"injectables/FormService.html":{}}}],["generatefieldcode",{"_index":442,"title":{},"body":{"injectables/FormService.html":{}}}],["generatefieldcode(field",{"_index":461,"title":{},"body":{"injectables/FormService.html":{}}}],["generateformcode",{"_index":443,"title":{},"body":{"injectables/FormService.html":{}}}],["generateimports",{"_index":444,"title":{},"body":{"injectables/FormService.html":{}}}],["getallfieldtypes",{"_index":299,"title":{},"body":{"injectables/FieldTypesService.html":{}}}],["getfieldtype",{"_index":300,"title":{},"body":{"injectables/FieldTypesService.html":{}}}],["getfieldtype(type",{"_index":302,"title":{},"body":{"injectables/FieldTypesService.html":{}}}],["getting",{"_index":699,"title":{"index.html":{}},"body":{}}],["handles",{"_index":619,"title":{},"body":{"components/MainCanvas.html":{}}}],["helpbuilding",{"_index":736,"title":{},"body":{"index.html":{}}}],["here",{"_index":366,"title":{},"body":{"components/FormEditor.html":{},"components/MainCanvas.html":{}}}],["hidden",{"_index":642,"title":{},"body":{"components/MainCanvas.html":{}}}],["html",{"_index":73,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["http://localhost:4200",{"_index":717,"title":{},"body":{"index.html":{}}}],["icon",{"_index":282,"title":{},"body":{"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"injectables/FieldTypesService.html":{},"interfaces/FormField.html":{},"interfaces/OptionItem.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":287,"title":{},"body":{"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"components/FormEditor.html":{},"interfaces/FormField.html":{},"interfaces/FormRow.html":{},"injectables/FormService.html":{},"interfaces/OptionItem.html":{}}}],["identifier",{"_index":663,"title":{},"body":{"coverage.html":{}}}],["if(activetab",{"_index":600,"title":{},"body":{"components/MainCanvas.html":{}}}],["if(field().options",{"_index":657,"title":{},"body":{"components/SelectField.html":{}}}],["if(field.options",{"_index":339,"title":{},"body":{"injectables/FieldTypesService.html":{},"miscellaneous/variables.html":{}}}],["if(formservice.selectedfield",{"_index":237,"title":{},"body":{"components/FieldSettings.html":{}}}],["if(index",{"_index":542,"title":{},"body":{"injectables/FormService.html":{}}}],["if(row.fields.length",{"_index":566,"title":{},"body":{"injectables/FormService.html":{}}}],["if(whiledragging",{"_index":201,"title":{},"body":{"components/FieldButton.html":{}}}],["import",{"_index":48,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"interfaces/FormField.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"interfaces/FormRow.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{},"interfaces/OptionItem.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["imports",{"_index":12,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["in/fade",{"_index":621,"title":{},"body":{"components/MainCanvas.html":{}}}],["includes",{"_index":725,"title":{},"body":{"index.html":{}}}],["including",{"_index":770,"title":{},"body":{"index.html":{}}}],["index",{"_index":33,"title":{"index.html":{}},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"interfaces/FormField.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"interfaces/FormRow.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{},"interfaces/OptionItem.html":{},"components/SelectField.html":{},"components/TextField.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"interfaces/FormField.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"interfaces/FormRow.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{},"interfaces/OptionItem.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["information",{"_index":769,"title":{},"body":{"index.html":{}}}],["inject",{"_index":49,"title":{},"body":{"components/App.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{}}}],["inject(applicationref",{"_index":482,"title":{},"body":{"injectables/FormService.html":{}}}],["inject(fieldtypesservice",{"_index":222,"title":{},"body":{"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"injectables/FormService.html":{}}}],["inject(formservice",{"_index":42,"title":{},"body":{"components/App.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{}}}],["injectable",{"_index":294,"title":{"injectables/FieldTypesService.html":{},"injectables/FormService.html":{}},"body":{"injectables/FieldTypesService.html":{},"injectables/FormService.html":{},"coverage.html":{}}}],["injectables",{"_index":295,"title":{},"body":{"injectables/FieldTypesService.html":{},"injectables/FormService.html":{},"overview.html":{}}}],["input",{"_index":119,"title":{},"body":{"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"injectables/FieldTypesService.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/SelectField.html":{},"components/TextField.html":{},"miscellaneous/variables.html":{}}}],["input.required",{"_index":124,"title":{},"body":{"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FormFieldComponent.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["inputs",{"_index":115,"title":{},"body":{"components/CheckboxField.html":{},"components/DateField.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FormFieldComponent.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["inputtype",{"_index":289,"title":{},"body":{"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"injectables/FieldTypesService.html":{},"interfaces/FormField.html":{},"interfaces/OptionItem.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":278,"title":{"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"interfaces/FormField.html":{},"interfaces/FormRow.html":{},"interfaces/OptionItem.html":{}},"body":{"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"interfaces/FormField.html":{},"interfaces/FormRow.html":{},"interfaces/OptionItem.html":{},"coverage.html":{}}}],["interfaces",{"_index":280,"title":{},"body":{"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"interfaces/FormField.html":{},"interfaces/FormRow.html":{},"interfaces/OptionItem.html":{},"overview.html":{}}}],["item",{"_index":406,"title":{},"body":{"components/FormElementMenu.html":{}}}],["karma",{"_index":751,"title":{},"body":{"index.html":{}}}],["key",{"_index":256,"title":{},"body":{"components/FieldSettings.html":{},"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"injectables/FieldTypesService.html":{},"interfaces/FormField.html":{},"interfaces/OptionItem.html":{},"miscellaneous/variables.html":{}}}],["keyboard_arrow_down",{"_index":361,"title":{},"body":{"components/FormEditor.html":{}}}],["keyboard_arrow_up",{"_index":360,"title":{},"body":{"components/FormEditor.html":{}}}],["label",{"_index":186,"title":{},"body":{"components/DynamicOptions.html":{},"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"injectables/FieldTypesService.html":{},"interfaces/FormField.html":{},"interfaces/OptionItem.html":{},"miscellaneous/variables.html":{}}}],["label:'dropdown",{"_index":336,"title":{},"body":{"injectables/FieldTypesService.html":{},"miscellaneous/variables.html":{}}}],["label:'label",{"_index":334,"title":{},"body":{"injectables/FieldTypesService.html":{},"miscellaneous/variables.html":{}}}],["label:'required",{"_index":335,"title":{},"body":{"injectables/FieldTypesService.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":72,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["link",{"_index":556,"title":{},"body":{"injectables/FormService.html":{}}}],["link.click",{"_index":561,"title":{},"body":{"injectables/FormService.html":{}}}],["link.download",{"_index":559,"title":{},"body":{"injectables/FormService.html":{}}}],["link.href",{"_index":558,"title":{},"body":{"injectables/FormService.html":{}}}],["list",{"_index":731,"title":{},"body":{"index.html":{}}}],["local",{"_index":709,"title":{},"body":{"index.html":{}}}],["logic",{"_index":655,"title":{},"body":{"components/MainCanvas.html":{}}}],["main",{"_index":98,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["maincanvas",{"_index":16,"title":{"components/MainCanvas.html":{}},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{},"coverage.html":{}}}],["map",{"_index":306,"title":{},"body":{"injectables/FieldTypesService.html":{}}}],["margin",{"_index":646,"title":{},"body":{"components/MainCanvas.html":{}}}],["mat_form_field_default_options",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":14,"title":{},"body":{"components/App.html":{},"components/DynamicOptions.html":{},"components/FormEditor.html":{},"components/FormFieldComponent.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{}}}],["matbuttonmodule\\n",{"_index":590,"title":{},"body":{"injectables/FormService.html":{}}}],["matbuttontogglemodule",{"_index":598,"title":{},"body":{"components/MainCanvas.html":{}}}],["matcheckboxmodule",{"_index":112,"title":{},"body":{"components/CheckboxField.html":{},"components/FieldSettings.html":{},"injectables/FormService.html":{}}}],["matcheckboxmodule\\n",{"_index":594,"title":{},"body":{"injectables/FormService.html":{}}}],["matching",{"_index":107,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"interfaces/FormField.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"interfaces/FormRow.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{},"interfaces/OptionItem.html":{},"components/SelectField.html":{},"components/TextField.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":129,"title":{},"body":{"components/DateField.html":{},"injectables/FormService.html":{}}}],["matdatepickermodule\\n",{"_index":596,"title":{},"body":{"injectables/FormService.html":{}}}],["material",{"_index":27,"title":{},"body":{"components/App.html":{}}}],["matformfieldmodule",{"_index":131,"title":{},"body":{"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldSettings.html":{},"injectables/FormService.html":{},"components/TextField.html":{}}}],["matformfieldmodule,maticonmodule,matinputmodule,formsmodule",{"_index":179,"title":{},"body":{"components/DynamicOptions.html":{}}}],["matformfieldmodule\\n",{"_index":592,"title":{},"body":{"injectables/FormService.html":{}}}],["maticonmodule",{"_index":13,"title":{},"body":{"components/App.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FormEditor.html":{},"components/FormFieldComponent.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{}}}],["maticonmodule,dragdropmodule",{"_index":208,"title":{},"body":{"components/FieldButton.html":{}}}],["maticonmodule\\n",{"_index":591,"title":{},"body":{"injectables/FormService.html":{}}}],["matinput",{"_index":235,"title":{},"body":{"components/FieldSettings.html":{}}}],["matinputmodule",{"_index":130,"title":{},"body":{"components/DateField.html":{},"components/DynamicOptions.html":{},"injectables/FormService.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["matinputmodule,\\n",{"_index":589,"title":{},"body":{"injectables/FormService.html":{}}}],["matinputmodule,matselectmodule",{"_index":659,"title":{},"body":{"components/SelectField.html":{}}}],["matradiomodule",{"_index":579,"title":{},"body":{"injectables/FormService.html":{}}}],["matradiomodule\\n",{"_index":595,"title":{},"body":{"injectables/FormService.html":{}}}],["matselectmodule",{"_index":236,"title":{},"body":{"components/FieldSettings.html":{},"injectables/FormService.html":{},"components/SelectField.html":{}}}],["matselectmodule\\n",{"_index":593,"title":{},"body":{"injectables/FormService.html":{}}}],["menu",{"_index":57,"title":{},"body":{"components/App.html":{},"components/FormElementMenu.html":{}}}],["menu'},{'name",{"_index":95,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["menu.html",{"_index":410,"title":{},"body":{"components/FormElementMenu.html":{}}}],["menu.scss",{"_index":401,"title":{},"body":{"components/FormElementMenu.html":{}}}],["menu.ts",{"_index":397,"title":{},"body":{"components/FormElementMenu.html":{},"coverage.html":{}}}],["menu.ts:28",{"_index":409,"title":{},"body":{"components/FormElementMenu.html":{}}}],["menu.ts:30",{"_index":408,"title":{},"body":{"components/FormElementMenu.html":{}}}],["menu.ts:32",{"_index":405,"title":{},"body":{"components/FormElementMenu.html":{}}}],["menu/form",{"_index":56,"title":{},"body":{"components/App.html":{},"components/FormElementMenu.html":{},"coverage.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["method",{"_index":652,"title":{},"body":{"components/MainCanvas.html":{}}}],["methods",{"_index":151,"title":{},"body":{"components/DynamicOptions.html":{},"components/FieldSettings.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{}}}],["miscellaneous",{"_index":781,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mm/dd/yyyy",{"_index":132,"title":{},"body":{"components/DateField.html":{}}}],["models/field",{"_index":177,"title":{},"body":{"components/DynamicOptions.html":{},"components/FieldPreview.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"injectables/FormService.html":{}}}],["models/form",{"_index":494,"title":{},"body":{"injectables/FormService.html":{}}}],["modify",{"_index":722,"title":{},"body":{"index.html":{}}}],["module.d",{"_index":174,"title":{},"body":{"components/DynamicOptions.html":{}}}],["modules",{"_index":777,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":768,"title":{},"body":{"index.html":{}}}],["movefield",{"_index":445,"title":{},"body":{"injectables/FormService.html":{}}}],["movefield(fieldid",{"_index":465,"title":{},"body":{"injectables/FormService.html":{}}}],["moverowdown",{"_index":446,"title":{},"body":{"injectables/FormService.html":{}}}],["moverowdown(rowid",{"_index":470,"title":{},"body":{"injectables/FormService.html":{}}}],["moverowup",{"_index":447,"title":{},"body":{"injectables/FormService.html":{}}}],["moverowup(rowid",{"_index":472,"title":{},"body":{"injectables/FormService.html":{}}}],["n",{"_index":338,"title":{},"body":{"injectables/FieldTypesService.html":{},"injectables/FormService.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":77,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["namefor",{"_index":729,"title":{},"body":{"index.html":{}}}],["navigate",{"_index":716,"title":{},"body":{"index.html":{}}}],["needed",{"_index":616,"title":{},"body":{"components/MainCanvas.html":{}}}],["needs",{"_index":765,"title":{},"body":{"index.html":{}}}],["new",{"_index":305,"title":{},"body":{"injectables/FieldTypesService.html":{},"injectables/FormService.html":{},"coverage.html":{},"index.html":{}}}],["newfield",{"_index":385,"title":{},"body":{"components/FormEditor.html":{}}}],["newlabel",{"_index":165,"title":{},"body":{"components/DynamicOptions.html":{}}}],["newlabel:string",{"_index":195,"title":{},"body":{"components/DynamicOptions.html":{}}}],["newoption",{"_index":192,"title":{},"body":{"components/DynamicOptions.html":{}}}],["newoption.splice(index",{"_index":193,"title":{},"body":{"components/DynamicOptions.html":{}}}],["newoption[index",{"_index":196,"title":{},"body":{"components/DynamicOptions.html":{}}}],["newoptions",{"_index":184,"title":{},"body":{"components/DynamicOptions.html":{}}}],["newoptions.length",{"_index":188,"title":{},"body":{"components/DynamicOptions.html":{}}}],["newoptions.push",{"_index":185,"title":{},"body":{"components/DynamicOptions.html":{}}}],["newrow",{"_index":516,"title":{},"body":{"injectables/FormService.html":{}}}],["newrows",{"_index":504,"title":{},"body":{"injectables/FormService.html":{}}}],["newrows.findindex((r",{"_index":531,"title":{},"body":{"injectables/FormService.html":{}}}],["newrows[index",{"_index":544,"title":{},"body":{"injectables/FormService.html":{}}}],["newrows[sourcerowindex].fields",{"_index":529,"title":{},"body":{"injectables/FormService.html":{}}}],["newrows[sourcerowindex].fields.filter",{"_index":528,"title":{},"body":{"injectables/FormService.html":{}}}],["newrows[targetrowindex].fields",{"_index":534,"title":{},"body":{"injectables/FormService.html":{}}}],["ng",{"_index":712,"title":{},"body":{"index.html":{}}}],["ngcomponentoutlet",{"_index":217,"title":{},"body":{"components/FieldPreview.html":{},"components/FormFieldComponent.html":{}}}],["node_modules/@angular/material/icon",{"_index":173,"title":{},"body":{"components/DynamicOptions.html":{}}}],["nodropallowed",{"_index":402,"title":{},"body":{"components/FormElementMenu.html":{}}}],["nodropallowed(item",{"_index":403,"title":{},"body":{"components/FormElementMenu.html":{}}}],["nowid",{"_index":458,"title":{},"body":{"injectables/FormService.html":{}}}],["null",{"_index":228,"title":{},"body":{"components/FieldPreview.html":{}}}],["number",{"_index":159,"title":{},"body":{"components/DynamicOptions.html":{},"injectables/FormService.html":{}}}],["number',label:'number",{"_index":321,"title":{},"body":{"injectables/FieldTypesService.html":{},"miscellaneous/variables.html":{}}}],["ondropinrow",{"_index":368,"title":{},"body":{"components/FormEditor.html":{}}}],["ondropinrow(event",{"_index":370,"title":{},"body":{"components/FormEditor.html":{}}}],["one",{"_index":763,"title":{},"body":{"index.html":{}}}],["opacity",{"_index":627,"title":{},"body":{"components/MainCanvas.html":{}}}],["open",{"_index":715,"title":{},"body":{"index.html":{}}}],["optimizes",{"_index":745,"title":{},"body":{"index.html":{}}}],["option",{"_index":187,"title":{},"body":{"components/DynamicOptions.html":{},"injectables/FieldTypesService.html":{},"components/SelectField.html":{},"miscellaneous/variables.html":{}}}],["option.label",{"_index":248,"title":{},"body":{"components/FieldSettings.html":{},"components/SelectField.html":{}}}],["option.label}\\n",{"_index":341,"title":{},"body":{"injectables/FieldTypesService.html":{},"miscellaneous/variables.html":{}}}],["option.value",{"_index":147,"title":{},"body":{"components/DynamicOptions.html":{},"components/FieldSettings.html":{},"components/SelectField.html":{}}}],["option1",{"_index":329,"title":{},"body":{"injectables/FieldTypesService.html":{},"miscellaneous/variables.html":{}}}],["option2",{"_index":330,"title":{},"body":{"injectables/FieldTypesService.html":{},"miscellaneous/variables.html":{}}}],["option3",{"_index":332,"title":{},"body":{"injectables/FieldTypesService.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":163,"title":{},"body":{"components/DynamicOptions.html":{},"components/FieldSettings.html":{},"interfaces/FieldSettingsDefinition.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"interfaces/FormField.html":{},"components/FormFieldComponent.html":{},"injectables/FormService.html":{}}}],["optionitem",{"_index":176,"title":{"interfaces/OptionItem.html":{}},"body":{"components/DynamicOptions.html":{},"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"interfaces/FormField.html":{},"interfaces/OptionItem.html":{},"coverage.html":{}}}],["options",{"_index":142,"title":{},"body":{"components/DynamicOptions.html":{},"components/FieldSettings.html":{},"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"injectables/FieldTypesService.html":{},"interfaces/FormField.html":{},"interfaces/OptionItem.html":{},"miscellaneous/variables.html":{}}}],["options'},{'name",{"_index":86,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["options.html",{"_index":180,"title":{},"body":{"components/DynamicOptions.html":{}}}],["options.scss",{"_index":149,"title":{},"body":{"components/DynamicOptions.html":{}}}],["options.ts",{"_index":141,"title":{},"body":{"components/DynamicOptions.html":{},"coverage.html":{}}}],["options.ts:44",{"_index":171,"title":{},"body":{"components/DynamicOptions.html":{}}}],["options.ts:45",{"_index":168,"title":{},"body":{"components/DynamicOptions.html":{}}}],["options.ts:46",{"_index":170,"title":{},"body":{"components/DynamicOptions.html":{}}}],["options.ts:48",{"_index":155,"title":{},"body":{"components/DynamicOptions.html":{}}}],["options.ts:58",{"_index":160,"title":{},"body":{"components/DynamicOptions.html":{}}}],["options.ts:65",{"_index":167,"title":{},"body":{"components/DynamicOptions.html":{}}}],["options/dynamic",{"_index":140,"title":{},"body":{"components/DynamicOptions.html":{},"components/FieldSettings.html":{},"coverage.html":{}}}],["optionschange",{"_index":150,"title":{},"body":{"components/DynamicOptions.html":{}}}],["out",{"_index":622,"title":{},"body":{"components/MainCanvas.html":{}}}],["outline",{"_index":795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["output",{"_index":169,"title":{},"body":{"components/DynamicOptions.html":{}}}],["overview",{"_index":774,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":681,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":647,"title":{},"body":{"components/MainCanvas.html":{}}}],["page",{"_index":776,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":161,"title":{},"body":{"components/DynamicOptions.html":{},"components/FieldSettings.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"injectables/FormService.html":{}}}],["partial",{"_index":477,"title":{},"body":{"injectables/FormService.html":{}}}],["performance",{"_index":746,"title":{},"body":{"index.html":{}}}],["picker",{"_index":345,"title":{},"body":{"injectables/FieldTypesService.html":{},"miscellaneous/variables.html":{}}}],["pipes",{"_index":735,"title":{},"body":{"index.html":{}}}],["placeholder",{"_index":319,"title":{},"body":{"injectables/FieldTypesService.html":{},"interfaces/FormField.html":{},"miscellaneous/variables.html":{}}}],["placeholder?:string",{"_index":290,"title":{},"body":{"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"interfaces/FormField.html":{},"interfaces/OptionItem.html":{}}}],["postcss",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["powerful",{"_index":726,"title":{},"body":{"index.html":{}}}],["preview",{"_index":216,"title":{},"body":{"components/FieldPreview.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{}}}],["preview'},{'name",{"_index":91,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["preview.html",{"_index":233,"title":{},"body":{"components/FieldPreview.html":{},"components/FormPreview.html":{}}}],["preview.scss",{"_index":218,"title":{},"body":{"components/FieldPreview.html":{},"components/FormPreview.html":{}}}],["preview.ts",{"_index":215,"title":{},"body":{"components/FieldPreview.html":{},"components/FormPreview.html":{},"coverage.html":{}}}],["preview.ts:19",{"_index":221,"title":{},"body":{"components/FieldPreview.html":{}}}],["preview.ts:20",{"_index":223,"title":{},"body":{"components/FieldPreview.html":{}}}],["preview.ts:22",{"_index":229,"title":{},"body":{"components/FieldPreview.html":{}}}],["preview.ts:24",{"_index":426,"title":{},"body":{"components/FormPreview.html":{}}}],["preview/field",{"_index":214,"title":{},"body":{"components/FieldPreview.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"coverage.html":{}}}],["preview/form",{"_index":423,"title":{},"body":{"components/FormPreview.html":{},"components/MainCanvas.html":{},"coverage.html":{}}}],["previewcomponent",{"_index":220,"title":{},"body":{"components/FieldPreview.html":{}}}],["previousrowid",{"_index":393,"title":{},"body":{"components/FormEditor.html":{}}}],["private",{"_index":431,"title":{},"body":{"injectables/FormService.html":{}}}],["production",{"_index":744,"title":{},"body":{"index.html":{}}}],["project",{"_index":702,"title":{},"body":{"index.html":{}}}],["properties",{"_index":34,"title":{"properties.html":{}},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"interfaces/FormField.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"interfaces/FormRow.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{},"interfaces/OptionItem.html":{},"components/SelectField.html":{},"components/TextField.html":{},"properties.html":{}}}],["protected",{"_index":36,"title":{},"body":{"components/App.html":{}}}],["provide",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideanimations",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providebrowserglobalerrorlisteners",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":348,"title":{},"body":{"injectables/FieldTypesService.html":{},"injectables/FormService.html":{}}}],["providenativedateadapter",{"_index":128,"title":{},"body":{"components/DateField.html":{}}}],["providerouter(routes",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":127,"title":{},"body":{"components/DateField.html":{},"miscellaneous/variables.html":{}}}],["providezonelesschangedetection",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":435,"title":{},"body":{"injectables/FormService.html":{}}}],["r.id",{"_index":532,"title":{},"body":{"injectables/FormService.html":{}}}],["reactiveformsmodule,\\n",{"_index":588,"title":{},"body":{"injectables/FormService.html":{}}}],["readonly",{"_index":37,"title":{},"body":{"components/App.html":{},"injectables/FormService.html":{}}}],["reference",{"_index":775,"title":{},"body":{"index.html":{}}}],["references",{"_index":772,"title":{},"body":{"index.html":{}}}],["related",{"_index":545,"title":{},"body":{"injectables/FormService.html":{}}}],["reload",{"_index":720,"title":{},"body":{"index.html":{}}}],["removeoption",{"_index":153,"title":{},"body":{"components/DynamicOptions.html":{}}}],["removeoption(index",{"_index":158,"title":{},"body":{"components/DynamicOptions.html":{}}}],["removeoption(index:number",{"_index":191,"title":{},"body":{"components/DynamicOptions.html":{}}}],["required",{"_index":116,"title":{},"body":{"components/CheckboxField.html":{},"components/DateField.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"injectables/FieldTypesService.html":{},"interfaces/FormField.html":{},"components/FormFieldComponent.html":{},"interfaces/OptionItem.html":{},"components/SelectField.html":{},"components/TextField.html":{},"miscellaneous/variables.html":{}}}],["resources",{"_index":767,"title":{},"body":{"index.html":{}}}],["responsive",{"_index":25,"title":{},"body":{"components/App.html":{}}}],["results",{"_index":106,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"interfaces/FormField.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"interfaces/FormRow.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{},"interfaces/OptionItem.html":{},"components/SelectField.html":{},"components/TextField.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":226,"title":{},"body":{"components/FieldPreview.html":{},"components/FieldSettings.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"injectables/FormService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":156,"title":{},"body":{"components/DynamicOptions.html":{},"components/FieldSettings.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{}}}],["root",{"_index":11,"title":{},"body":{"components/App.html":{},"injectables/FieldTypesService.html":{},"injectables/FormService.html":{}}}],["root'},{'name",{"_index":78,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["routeroutlet",{"_index":52,"title":{},"body":{"components/App.html":{}}}],["row",{"_index":358,"title":{},"body":{"components/FormEditor.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{}}}],["row.fields",{"_index":363,"title":{},"body":{"components/FormEditor.html":{},"components/FormPreview.html":{},"injectables/FormService.html":{}}}],["row.fields).find((f",{"_index":501,"title":{},"body":{"injectables/FormService.html":{}}}],["row.fields.filter((f",{"_index":511,"title":{},"body":{"injectables/FormService.html":{}}}],["row.fields.findindex((f",{"_index":525,"title":{},"body":{"injectables/FormService.html":{}}}],["row.fields.map(f",{"_index":540,"title":{},"body":{"injectables/FormService.html":{}}}],["row.fields[sourcefieldindex",{"_index":526,"title":{},"body":{"injectables/FormService.html":{}}}],["row.id",{"_index":357,"title":{},"body":{"components/FormEditor.html":{},"components/FormPreview.html":{},"injectables/FormService.html":{}}}],["rowid",{"_index":372,"title":{},"body":{"components/FormEditor.html":{},"injectables/FormService.html":{}}}],["rowindex",{"_index":524,"title":{},"body":{"injectables/FormService.html":{}}}],["rows",{"_index":436,"title":{},"body":{"injectables/FormService.html":{}}}],["rows.filter((row",{"_index":519,"title":{},"body":{"injectables/FormService.html":{}}}],["rows.findindex(r",{"_index":541,"title":{},"body":{"injectables/FormService.html":{}}}],["rows.foreach((row",{"_index":523,"title":{},"body":{"injectables/FormService.html":{}}}],["rows.map((row",{"_index":505,"title":{},"body":{"injectables/FormService.html":{}}}],["rows.map(row",{"_index":539,"title":{},"body":{"injectables/FormService.html":{}}}],["run",{"_index":710,"title":{},"body":{"index.html":{}}}],["runner",{"_index":752,"title":{},"body":{"index.html":{}}}],["running",{"_index":714,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":724,"title":{},"body":{"index.html":{}}}],["scale(0.5",{"_index":644,"title":{},"body":{"components/MainCanvas.html":{}}}],["scale(1",{"_index":638,"title":{},"body":{"components/MainCanvas.html":{}}}],["schematics",{"_index":733,"title":{},"body":{"index.html":{}}}],["select",{"_index":101,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"interfaces/FormField.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"interfaces/OptionItem.html":{},"components/SelectField.html":{},"components/TextField.html":{},"miscellaneous/variables.html":{}}}],["selected_field_definition",{"_index":309,"title":{},"body":{"injectables/FieldTypesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectedfield",{"_index":238,"title":{},"body":{"components/FieldSettings.html":{},"injectables/FormService.html":{}}}],["selectfield",{"_index":100,"title":{"components/SelectField.html":{}},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":10,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["serveonce",{"_index":713,"title":{},"body":{"index.html":{}}}],["server",{"_index":707,"title":{},"body":{"index.html":{}}}],["services/field",{"_index":231,"title":{},"body":{"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{}}}],["services/form.service",{"_index":268,"title":{},"body":{"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{}}}],["setselectedfield",{"_index":448,"title":{},"body":{"injectables/FormService.html":{}}}],["setselectedfield(fieldid",{"_index":474,"title":{},"body":{"injectables/FormService.html":{}}}],["setting.key",{"_index":240,"title":{},"body":{"components/FieldSettings.html":{}}}],["setting.label",{"_index":244,"title":{},"body":{"components/FieldSettings.html":{}}}],["setting.options",{"_index":247,"title":{},"body":{"components/FieldSettings.html":{}}}],["setting.type",{"_index":242,"title":{},"body":{"components/FieldSettings.html":{}}}],["settings",{"_index":63,"title":{},"body":{"components/App.html":{},"components/FieldSettings.html":{}}}],["settings'},{'name",{"_index":92,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["settings.html",{"_index":270,"title":{},"body":{"components/FieldSettings.html":{}}}],["settings.scss",{"_index":250,"title":{},"body":{"components/FieldSettings.html":{}}}],["settings.ts",{"_index":234,"title":{},"body":{"components/FieldSettings.html":{},"coverage.html":{}}}],["settings.ts:74",{"_index":266,"title":{},"body":{"components/FieldSettings.html":{}}}],["settings.ts:75",{"_index":254,"title":{},"body":{"components/FieldSettings.html":{}}}],["settings.ts:82",{"_index":264,"title":{},"body":{"components/FieldSettings.html":{}}}],["settings.ts:91",{"_index":265,"title":{},"body":{"components/FieldSettings.html":{}}}],["settings.ts:96",{"_index":257,"title":{},"body":{"components/FieldSettings.html":{}}}],["settings/dynamic",{"_index":139,"title":{},"body":{"components/DynamicOptions.html":{},"coverage.html":{}}}],["settings/field",{"_index":62,"title":{},"body":{"components/App.html":{},"components/FieldSettings.html":{},"coverage.html":{}}}],["settingsconfig",{"_index":284,"title":{},"body":{"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"injectables/FieldTypesService.html":{},"interfaces/FormField.html":{},"interfaces/OptionItem.html":{},"miscellaneous/variables.html":{}}}],["shared/field",{"_index":312,"title":{},"body":{"injectables/FieldTypesService.html":{},"components/FormElementMenu.html":{}}}],["signal",{"_index":50,"title":{},"body":{"components/App.html":{},"components/FieldButton.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{}}}],["signal('dynamic",{"_index":45,"title":{},"body":{"components/App.html":{}}}],["signal('editor",{"_index":604,"title":{},"body":{"components/MainCanvas.html":{}}}],["signal(false",{"_index":205,"title":{},"body":{"components/FieldButton.html":{}}}],["signal(null",{"_index":480,"title":{},"body":{"injectables/FormService.html":{}}}],["slide/fade",{"_index":634,"title":{},"body":{"components/MainCanvas.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"interfaces/FormField.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"interfaces/FormRow.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{},"interfaces/OptionItem.html":{},"components/SelectField.html":{},"components/TextField.html":{},"index.html":{}}}],["sourcefieldindex",{"_index":522,"title":{},"body":{"injectables/FormService.html":{}}}],["sourcerowid",{"_index":466,"title":{},"body":{"injectables/FormService.html":{}}}],["sourcerowindex",{"_index":521,"title":{},"body":{"injectables/FormService.html":{}}}],["speed",{"_index":747,"title":{},"body":{"index.html":{}}}],["src/.../app.config.ts",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../field",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../view",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":665,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.ts",{"_index":8,"title":{},"body":{"components/App.html":{},"coverage.html":{}}}],["src/app/app.ts:36",{"_index":44,"title":{},"body":{"components/App.html":{}}}],["src/app/app.ts:37",{"_index":47,"title":{},"body":{"components/App.html":{}}}],["src/app/feature/components/field",{"_index":138,"title":{},"body":{"components/DynamicOptions.html":{},"components/FieldSettings.html":{},"coverage.html":{}}}],["src/app/feature/components/form",{"_index":396,"title":{},"body":{"components/FormElementMenu.html":{},"coverage.html":{}}}],["src/app/feature/components/main",{"_index":212,"title":{},"body":{"components/FieldPreview.html":{},"components/FormEditor.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"coverage.html":{}}}],["src/app/feature/models/field.ts",{"_index":281,"title":{},"body":{"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"interfaces/FormField.html":{},"interfaces/OptionItem.html":{},"coverage.html":{}}}],["src/app/feature/models/form.ts",{"_index":428,"title":{},"body":{"interfaces/FormRow.html":{},"coverage.html":{}}}],["src/app/feature/services/field",{"_index":296,"title":{},"body":{"injectables/FieldTypesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/feature/services/form.service.ts",{"_index":430,"title":{},"body":{"injectables/FormService.html":{},"coverage.html":{}}}],["src/app/feature/services/form.service.ts:11",{"_index":484,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/feature/services/form.service.ts:12",{"_index":479,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/feature/services/form.service.ts:13",{"_index":481,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/feature/services/form.service.ts:134",{"_index":475,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/feature/services/form.service.ts:138",{"_index":478,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/feature/services/form.service.ts:14",{"_index":486,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/feature/services/form.service.ts:15",{"_index":483,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/feature/services/form.service.ts:150",{"_index":473,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/feature/services/form.service.ts:16",{"_index":492,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/feature/services/form.service.ts:164",{"_index":471,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/feature/services/form.service.ts:178",{"_index":459,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/feature/services/form.service.ts:191",{"_index":463,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/feature/services/form.service.ts:20",{"_index":449,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/feature/services/form.service.ts:216",{"_index":462,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/feature/services/form.service.ts:221",{"_index":464,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/feature/services/form.service.ts:235",{"_index":460,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/feature/services/form.service.ts:36",{"_index":451,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/feature/services/form.service.ts:57",{"_index":455,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/feature/services/form.service.ts:69",{"_index":453,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/feature/services/form.service.ts:83",{"_index":457,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/feature/services/form.service.ts:95",{"_index":469,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/feature/utils/view",{"_index":677,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/field",{"_index":108,"title":{},"body":{"components/CheckboxField.html":{},"components/DateField.html":{},"components/FieldButton.html":{},"components/SelectField.html":{},"components/TextField.html":{},"coverage.html":{}}}],["standalone",{"_index":585,"title":{},"body":{"injectables/FormService.html":{},"components/MainCanvas.html":{}}}],["start",{"_index":708,"title":{},"body":{"index.html":{}}}],["started",{"_index":700,"title":{"index.html":{}},"body":{}}],["startviewtransition",{"_index":495,"title":{},"body":{"injectables/FormService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["state",{"_index":609,"title":{},"body":{"components/MainCanvas.html":{}}}],["state('editor",{"_index":626,"title":{},"body":{"components/MainCanvas.html":{}}}],["state('hidden",{"_index":643,"title":{},"body":{"components/MainCanvas.html":{}}}],["state('preview",{"_index":630,"title":{},"body":{"components/MainCanvas.html":{}}}],["state('visible",{"_index":637,"title":{},"body":{"components/MainCanvas.html":{}}}],["statements",{"_index":664,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":649,"title":{},"body":{"components/MainCanvas.html":{}}}],["store",{"_index":740,"title":{},"body":{"index.html":{}}}],["string",{"_index":166,"title":{},"body":{"components/DynamicOptions.html":{},"components/FieldSettings.html":{},"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"interfaces/FormField.html":{},"interfaces/FormRow.html":{},"injectables/FormService.html":{},"interfaces/OptionItem.html":{}}}],["style",{"_index":610,"title":{},"body":{"components/MainCanvas.html":{}}}],["styleurl",{"_index":31,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["subscriptsizing",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["such",{"_index":734,"title":{},"body":{"index.html":{}}}],["suits",{"_index":764,"title":{},"body":{"index.html":{}}}],["supported",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switch",{"_index":241,"title":{},"body":{"components/FieldSettings.html":{}}}],["table",{"_index":680,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":679,"title":{},"body":{"coverage.html":{}}}],["tailwindcss",{"_index":28,"title":{},"body":{"components/App.html":{}}}],["tailwindcss/postcss",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["targetfields",{"_index":533,"title":{},"body":{"injectables/FormService.html":{}}}],["targetfields.splice(targetindex",{"_index":535,"title":{},"body":{"injectables/FormService.html":{}}}],["targetindex",{"_index":468,"title":{},"body":{"injectables/FormService.html":{}}}],["targetrowid",{"_index":467,"title":{},"body":{"injectables/FormService.html":{}}}],["targetrowindex",{"_index":530,"title":{},"body":{"injectables/FormService.html":{}}}],["tel',label:'phone",{"_index":323,"title":{},"body":{"injectables/FieldTypesService.html":{},"miscellaneous/variables.html":{}}}],["temp",{"_index":543,"title":{},"body":{"injectables/FormService.html":{}}}],["template",{"_index":19,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["templateurl",{"_index":69,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["test",{"_index":369,"title":{},"body":{"components/FormEditor.html":{},"index.html":{}}}],["test(row",{"_index":375,"title":{},"body":{"components/FormEditor.html":{}}}],["test(row:any",{"_index":380,"title":{},"body":{"components/FormEditor.html":{}}}],["testing",{"_index":759,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":756,"title":{},"body":{"index.html":{}}}],["tests",{"_index":749,"title":{},"body":{"index.html":{}}}],["text",{"_index":103,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"interfaces/FormField.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"interfaces/OptionItem.html":{},"components/SelectField.html":{},"components/TextField.html":{},"miscellaneous/variables.html":{}}}],["text',label:'text",{"_index":320,"title":{},"body":{"injectables/FieldTypesService.html":{},"miscellaneous/variables.html":{}}}],["text/plain",{"_index":553,"title":{},"body":{"injectables/FormService.html":{}}}],["text_field_defination",{"_index":307,"title":{},"body":{"injectables/FieldTypesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["text_fields",{"_index":317,"title":{},"body":{"injectables/FieldTypesService.html":{},"miscellaneous/variables.html":{}}}],["textfield",{"_index":102,"title":{"components/TextField.html":{}},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["this._rows",{"_index":487,"title":{},"body":{"injectables/FormService.html":{}}}],["this._rows().length",{"_index":518,"title":{},"body":{"injectables/FormService.html":{}}}],["this._rows.asreadonly",{"_index":485,"title":{},"body":{"injectables/FormService.html":{}}}],["this._rows.set",{"_index":503,"title":{},"body":{"injectables/FormService.html":{}}}],["this._rows.set([...row",{"_index":517,"title":{},"body":{"injectables/FormService.html":{}}}],["this._rows.set(newrows",{"_index":510,"title":{},"body":{"injectables/FormService.html":{}}}],["this._selectedfieldid",{"_index":491,"title":{},"body":{"injectables/FormService.html":{}}}],["this._selectedfieldid.set(fieldid",{"_index":537,"title":{},"body":{"injectables/FormService.html":{}}}],["this.appref.tick",{"_index":512,"title":{},"body":{"injectables/FormService.html":{}}}],["this.fieldsettings",{"_index":272,"title":{},"body":{"components/FieldSettings.html":{}}}],["this.fieldtypes.get(type",{"_index":349,"title":{},"body":{"injectables/FieldTypesService.html":{}}}],["this.fieldtypesservice.getallfieldtypes",{"_index":407,"title":{},"body":{"components/FormElementMenu.html":{}}}],["this.fieldtypesservice.getfieldtype(field.type",{"_index":261,"title":{},"body":{"components/FieldSettings.html":{},"injectables/FormService.html":{}}}],["this.fieldtypesservice.getfieldtype(this.field().type",{"_index":225,"title":{},"body":{"components/FieldPreview.html":{}}}],["this.formservice.addfield(newfield",{"_index":390,"title":{},"body":{"components/FormEditor.html":{}}}],["this.formservice.addrow",{"_index":656,"title":{},"body":{"components/MainCanvas.html":{}}}],["this.formservice.deletefield(this.field().id",{"_index":422,"title":{},"body":{"components/FormFieldComponent.html":{}}}],["this.formservice.movefield",{"_index":394,"title":{},"body":{"components/FormEditor.html":{}}}],["this.formservice.selectedfield",{"_index":259,"title":{},"body":{"components/FieldSettings.html":{}}}],["this.formservice.updatefield(fieldid,{[key",{"_index":273,"title":{},"body":{"components/FieldSettings.html":{}}}],["this.generatecomponentdecorator",{"_index":564,"title":{},"body":{"injectables/FormService.html":{}}}],["this.generatefieldcode(field",{"_index":567,"title":{},"body":{"injectables/FormService.html":{}}}],["this.generateformcode",{"_index":548,"title":{},"body":{"injectables/FormService.html":{}}}],["this.generateimports",{"_index":563,"title":{},"body":{"injectables/FormService.html":{}}}],["this.options",{"_index":183,"title":{},"body":{"components/DynamicOptions.html":{}}}],["this.optionschange.emit(newoption",{"_index":194,"title":{},"body":{"components/DynamicOptions.html":{}}}],["this.optionschange.emit(newoptions",{"_index":190,"title":{},"body":{"components/DynamicOptions.html":{}}}],["this.rows",{"_index":536,"title":{},"body":{"injectables/FormService.html":{}}}],["title",{"_index":38,"title":{},"body":{"components/App.html":{},"components/DynamicOptions.html":{}}}],["titlecase",{"_index":413,"title":{},"body":{"components/FormFieldComponent.html":{}}}],["titlecasepipe",{"_index":411,"title":{},"body":{"components/FormFieldComponent.html":{}}}],["toggle",{"_index":607,"title":{},"body":{"components/MainCanvas.html":{}}}],["tools",{"_index":727,"title":{},"body":{"index.html":{}}}],["track",{"_index":146,"title":{},"body":{"components/DynamicOptions.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormPreview.html":{},"components/SelectField.html":{}}}],["transform",{"_index":628,"title":{},"body":{"components/MainCanvas.html":{}}}],["transition",{"_index":497,"title":{},"body":{"injectables/FormService.html":{},"components/MainCanvas.html":{}}}],["transition('visible",{"_index":650,"title":{},"body":{"components/MainCanvas.html":{}}}],["transition.ts",{"_index":678,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["translatey(0",{"_index":629,"title":{},"body":{"components/MainCanvas.html":{}}}],["translatey(20px",{"_index":631,"title":{},"body":{"components/MainCanvas.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["trigger",{"_index":608,"title":{},"body":{"components/MainCanvas.html":{}}}],["trigger('buttonvisibility",{"_index":635,"title":{},"body":{"components/MainCanvas.html":{}}}],["trigger('tabfade",{"_index":625,"title":{},"body":{"components/MainCanvas.html":{}}}],["true",{"_index":117,"title":{},"body":{"components/CheckboxField.html":{},"components/DateField.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FormFieldComponent.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["true,\\n",{"_index":586,"title":{},"body":{"injectables/FormService.html":{}}}],["tslib",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":162,"title":{},"body":{"components/DynamicOptions.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"interfaces/FormField.html":{},"components/FormFieldComponent.html":{},"interfaces/FormRow.html":{},"injectables/FormService.html":{},"interfaces/OptionItem.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.type",{"_index":400,"title":{},"body":{"components/FormElementMenu.html":{}}}],["type?.component",{"_index":227,"title":{},"body":{"components/FieldPreview.html":{}}}],["types.service",{"_index":232,"title":{},"body":{"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"injectables/FormService.html":{}}}],["types.service.ts",{"_index":297,"title":{},"body":{"injectables/FieldTypesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types.service.ts:154",{"_index":311,"title":{},"body":{"injectables/FieldTypesService.html":{}}}],["types.service.ts:160",{"_index":303,"title":{},"body":{"injectables/FieldTypesService.html":{}}}],["types.service.ts:163",{"_index":301,"title":{},"body":{"injectables/FieldTypesService.html":{}}}],["types/checkbox",{"_index":109,"title":{},"body":{"components/CheckboxField.html":{},"injectables/FieldTypesService.html":{},"coverage.html":{}}}],["types/date",{"_index":125,"title":{},"body":{"components/DateField.html":{},"injectables/FieldTypesService.html":{},"coverage.html":{}}}],["types/select",{"_index":315,"title":{},"body":{"injectables/FieldTypesService.html":{},"components/SelectField.html":{},"coverage.html":{}}}],["types/text",{"_index":313,"title":{},"body":{"injectables/FieldTypesService.html":{},"components/TextField.html":{},"coverage.html":{}}}],["undefined",{"_index":304,"title":{},"body":{"injectables/FieldTypesService.html":{},"injectables/FormService.html":{}}}],["unit",{"_index":748,"title":{},"body":{"index.html":{}}}],["updated",{"_index":515,"title":{},"body":{"injectables/FormService.html":{}}}],["updatedfields",{"_index":506,"title":{},"body":{"injectables/FormService.html":{}}}],["updatedfields.push(field",{"_index":509,"title":{},"body":{"injectables/FormService.html":{}}}],["updatedfields.splice(index",{"_index":507,"title":{},"body":{"injectables/FormService.html":{}}}],["updatefield",{"_index":252,"title":{},"body":{"components/FieldSettings.html":{},"injectables/FormService.html":{}}}],["updatefield(fieldid",{"_index":255,"title":{},"body":{"components/FieldSettings.html":{},"injectables/FormService.html":{}}}],["updateoption",{"_index":154,"title":{},"body":{"components/DynamicOptions.html":{}}}],["updateoption(index",{"_index":164,"title":{},"body":{"components/DynamicOptions.html":{}}}],["url",{"_index":554,"title":{},"body":{"injectables/FormService.html":{}}}],["use",{"_index":753,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":640,"title":{},"body":{"components/MainCanvas.html":{},"index.html":{}}}],["utils/view",{"_index":496,"title":{},"body":{"injectables/FormService.html":{}}}],["value",{"_index":40,"title":{},"body":{"components/App.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"interfaces/FieldSettingsDefinition.html":{},"interfaces/FieldTypeDefinition.html":{},"injectables/FieldTypesService.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"interfaces/FormField.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{},"interfaces/OptionItem.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":75,"title":{},"body":{"components/App.html":{},"components/CheckboxField.html":{},"components/DateField.html":{},"components/DynamicOptions.html":{},"components/FieldButton.html":{},"components/FieldPreview.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormElementMenu.html":{},"components/FormFieldComponent.html":{},"components/FormPreview.html":{},"components/MainCanvas.html":{},"components/SelectField.html":{},"components/TextField.html":{}}}],["variable",{"_index":666,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":782,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":704,"title":{},"body":{"index.html":{},"properties.html":{}}}],["view",{"_index":514,"title":{},"body":{"injectables/FormService.html":{}}}],["visible",{"_index":636,"title":{},"body":{"components/MainCanvas.html":{}}}],["visit",{"_index":773,"title":{},"body":{"index.html":{}}}],["void",{"_index":157,"title":{},"body":{"components/DynamicOptions.html":{},"components/FieldSettings.html":{},"components/FormEditor.html":{},"components/FormFieldComponent.html":{},"injectables/FormService.html":{},"components/MainCanvas.html":{},"miscellaneous/variables.html":{}}}],["whenever",{"_index":721,"title":{},"body":{"index.html":{}}}],["whiledragging",{"_index":203,"title":{},"body":{"components/FieldButton.html":{}}}],["width",{"_index":639,"title":{},"body":{"components/MainCanvas.html":{}}}],["window.url.createobjecturl(blob",{"_index":555,"title":{},"body":{"injectables/FormService.html":{}}}],["window.url.revokeobjecturl(url",{"_index":562,"title":{},"body":{"injectables/FormService.html":{}}}],["yes",{"_index":452,"title":{},"body":{"injectables/FormService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/App.html":{"url":"components/App.html","title":"component - App","body":"\n                   \n\n\n\n\n\n  Components\n  \n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            MatIconModule\n                            MatButtonModule\n                                FormElementMenu\n                                MainCanvas\n                                FieldSettings\n                            DragDropModule\n                \n            \n\n\n\n            \n                template\n                \n  \n    Angular Form Designer\n    Create beautiful, responsive forms with angular Material and TailwindCSS\n  \n\n  \n    Export Form download\n  \n  \n    \n    \n    \n  \n\n\n\n            \n\n\n\n\n            \n                styleUrl\n                ./app.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formService\n                            \n                            \n                                    Protected\n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('Dynamic-Form-Builder')\n                    \n                \n                    \n                        \n                                Defined in src/app/app.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, signal } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { FormElementMenu } from \"./feature/components/form-element-menu/form-element-menu\";\nimport { MainCanvas } from \"./feature/components/main-canvas/main-canvas\";\nimport { FieldSettings } from \"./feature/components/field-settings/field-settings\";\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormService } from './feature/services/form.service';\n\n@Component({\n  selector: 'app-root',\n  imports: [MatIconModule, MatButtonModule, FormElementMenu, MainCanvas, FieldSettings, DragDropModule],\n  // templateUrl: './app.html',\n  template:`\n  \n    \n      Angular Form Designer\n      Create beautiful, responsive forms with angular Material and TailwindCSS\n    \n\n    \n      Export Form download\n    \n    \n      \n      \n      \n    \n  \n\n  `,\n  styleUrl: './app.scss'\n})\nexport class App {\n  formService = inject(FormService);\n  protected readonly title = signal('Dynamic-Form-Builder');\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Angular Form Designer    Create beautiful, responsive forms with angular Material and TailwindCSS        Export Form download                  '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CheckboxField', 'selector': 'app-checkbox-field'},{'name': 'DateField', 'selector': 'app-date-field'},{'name': 'DynamicOptions', 'selector': 'app-dynamic-options'},{'name': 'FieldButton', 'selector': 'app-field-button'},{'name': 'FieldPreview', 'selector': 'app-field-preview'},{'name': 'FieldSettings', 'selector': 'app-field-settings'},{'name': 'FormEditor', 'selector': 'app-form-editor'},{'name': 'FormElementMenu', 'selector': 'app-form-element-menu'},{'name': 'FormFieldComponent', 'selector': 'app-form-field'},{'name': 'FormPreview', 'selector': 'app-form-preview'},{'name': 'MainCanvas', 'selector': 'app-main-canvas'},{'name': 'SelectField', 'selector': 'app-select-field'},{'name': 'TextField', 'selector': 'app-text-field'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'App'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxField.html":{"url":"components/CheckboxField.html","title":"component - CheckboxField","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckboxField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/field-types/checkbox-field/checkbox-field.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-checkbox-field\n            \n\n\n            \n                imports\n                \n                            MatCheckboxModule\n                \n            \n\n\n\n            \n                template\n                \n  {{field().label}}\n\n\n            \n\n\n\n\n            \n                styleUrl\n                ./checkbox-field.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/field-types/checkbox-field/checkbox-field.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/shared/field-types/checkbox-field/checkbox-field.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, input } from '@angular/core';\nimport { FormField } from '../../../feature/models/field';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\n@Component({\n  selector: 'app-checkbox-field',\n  imports: [MatCheckboxModule],\n  // templateUrl: './checkbox-field.html',\n  template:`\n  \n    {{field().label}}\n  \n  `,\n  styleUrl: './checkbox-field.scss'\n})\nexport class CheckboxField {\nfield = input.required()\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{field().label}}'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CheckboxField', 'selector': 'app-checkbox-field'},{'name': 'DateField', 'selector': 'app-date-field'},{'name': 'DynamicOptions', 'selector': 'app-dynamic-options'},{'name': 'FieldButton', 'selector': 'app-field-button'},{'name': 'FieldPreview', 'selector': 'app-field-preview'},{'name': 'FieldSettings', 'selector': 'app-field-settings'},{'name': 'FormEditor', 'selector': 'app-form-editor'},{'name': 'FormElementMenu', 'selector': 'app-form-element-menu'},{'name': 'FormFieldComponent', 'selector': 'app-form-field'},{'name': 'FormPreview', 'selector': 'app-form-preview'},{'name': 'MainCanvas', 'selector': 'app-main-canvas'},{'name': 'SelectField', 'selector': 'app-select-field'},{'name': 'TextField', 'selector': 'app-text-field'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxField'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DateField.html":{"url":"components/DateField.html","title":"component - DateField","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DateField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/field-types/date-field/date-field.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            provideNativeDateAdapter()\n                \n            \n\n\n            \n                selector\n                app-date-field\n            \n\n\n            \n                imports\n                \n                            MatDatepickerModule\n                            MatInputModule\n                                MatFormFieldModule\n                \n            \n\n\n\n            \n                template\n                \n  {{ field().label }}\n  \n  MM/DD/YYYY\n  \n  \n\n\n            \n\n\n\n\n            \n                styleUrl\n                ./date-field.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/field-types/date-field/date-field.ts:27\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/shared/field-types/date-field/date-field.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, input } from '@angular/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { provideNativeDateAdapter } from '@angular/material/core';\nimport { FormField } from '../../../feature/models/field';\n@Component({\n  selector: 'app-date-field',\n  providers: [provideNativeDateAdapter()],\n  imports: [MatDatepickerModule, MatInputModule, MatFormFieldModule],\n  // templateUrl: './date-field.html',\n  template: `\n    \n      {{ field().label }}\n      \n      MM/DD/YYYY\n      \n      \n    \n  `,\n  styleUrl: './date-field.scss',\n})\nexport class DateField {\n  field = input.required();\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ field().label }}    MM/DD/YYYY    '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CheckboxField', 'selector': 'app-checkbox-field'},{'name': 'DateField', 'selector': 'app-date-field'},{'name': 'DynamicOptions', 'selector': 'app-dynamic-options'},{'name': 'FieldButton', 'selector': 'app-field-button'},{'name': 'FieldPreview', 'selector': 'app-field-preview'},{'name': 'FieldSettings', 'selector': 'app-field-settings'},{'name': 'FormEditor', 'selector': 'app-form-editor'},{'name': 'FormElementMenu', 'selector': 'app-form-element-menu'},{'name': 'FormFieldComponent', 'selector': 'app-form-field'},{'name': 'FormPreview', 'selector': 'app-form-preview'},{'name': 'MainCanvas', 'selector': 'app-main-canvas'},{'name': 'SelectField', 'selector': 'app-select-field'},{'name': 'TextField', 'selector': 'app-text-field'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DateField'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DynamicOptions.html":{"url":"components/DynamicOptions.html","title":"component - DynamicOptions","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DynamicOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feature/components/field-settings/dynamic-options/dynamic-options.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dynamic-options\n            \n\n\n            \n                imports\n                \n                            MatButtonModule\n                                MatFormFieldModule\n                            MatIconModule\n                            MatInputModule\n                            FormsModule\n                \n            \n\n\n\n            \n                template\n                \n  \n     {{title()}}\n     \n      add_circle\n     \n  \n  \n      @for(option of options(); track option.value; let i = $index){\n        \n          \n            \n          \n          \n            delete\n          \n        \n      }\n  \n\n\n\n            \n\n\n\n\n            \n                styleUrl\n                ./dynamic-options.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                            \n                                optionsChange\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addOption\n                            \n                            \n                                removeOption\n                            \n                            \n                                updateOption\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addOption\n                        \n                    \n                \n            \n            \n                \naddOption()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/feature/components/field-settings/dynamic-options/dynamic-options.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeOption\n                        \n                    \n                \n            \n            \n                \nremoveOption(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/feature/components/field-settings/dynamic-options/dynamic-options.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOption\n                        \n                    \n                \n            \n            \n                \nupdateOption(index: number, newLabel: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/feature/components/field-settings/dynamic-options/dynamic-options.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newLabel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input.required()\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/components/field-settings/dynamic-options/dynamic-options.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionsChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : output()\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/components/field-settings/dynamic-options/dynamic-options.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('')\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/components/field-settings/dynamic-options/dynamic-options.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, input, output } from '@angular/core';\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { f } from \"../../../../../../node_modules/@angular/material/icon-module.d-COXCrhrh\";\nimport { OptionItem } from '../../../models/field';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-dynamic-options',\n  imports: [MatButtonModule, MatFormFieldModule,MatIconModule,MatInputModule,FormsModule],\n  template: `\n  \n    \n       {{title()}}\n       \n        add_circle\n       \n    \n    \n        @for(option of options(); track option.value; let i = $index){\n          \n            \n              \n            \n            \n              delete\n            \n          \n        }\n    \n    \n  \n  `,\n  // templateUrl: './dynamic-options.html',\n  styleUrl: './dynamic-options.scss'\n})\nexport class DynamicOptions {\ntitle = input('');\noptions = input.required()\noptionsChange = output()\n\naddOption(){\n  const currentOptions = this.options();\n  const newOptions = [...currentOptions];\n  newOptions.push({\n    label: `Option ${newOptions.length + 1}`,\n    value: `option-${newOptions.length + 1}`\n  })\n  this.optionsChange.emit(newOptions)\n}\n\nremoveOption(index:number){\n  const currentOptions = this.options()\n  const newOption = [...currentOptions];\n  newOption.splice(index, 1);\n  this.optionsChange.emit(newOption);\n}\n\nupdateOption(index: number, newLabel:string){\n  const currentOptions = this.options()\n  const newOption = [...currentOptions];\n  newOption[index] = {\n    ...newOption[index],\n    label: newLabel,\n  };\n  this.optionsChange.emit(newOption);\n}\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{title()}}           add_circle               @for(option of options(); track option.value; let i = $index){                                                              delete                        }  '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CheckboxField', 'selector': 'app-checkbox-field'},{'name': 'DateField', 'selector': 'app-date-field'},{'name': 'DynamicOptions', 'selector': 'app-dynamic-options'},{'name': 'FieldButton', 'selector': 'app-field-button'},{'name': 'FieldPreview', 'selector': 'app-field-preview'},{'name': 'FieldSettings', 'selector': 'app-field-settings'},{'name': 'FormEditor', 'selector': 'app-form-editor'},{'name': 'FormElementMenu', 'selector': 'app-form-element-menu'},{'name': 'FormFieldComponent', 'selector': 'app-form-field'},{'name': 'FormPreview', 'selector': 'app-form-preview'},{'name': 'MainCanvas', 'selector': 'app-main-canvas'},{'name': 'SelectField', 'selector': 'app-select-field'},{'name': 'TextField', 'selector': 'app-text-field'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DynamicOptions'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FieldButton.html":{"url":"components/FieldButton.html","title":"component - FieldButton","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FieldButton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/field-button/field-button.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-field-button\n            \n\n\n            \n                imports\n                \n                            MatIconModule\n                            DragDropModule\n                \n            \n\n\n\n            \n                template\n                \n\n  {{field().icon}}\n\n{{field().label}}\n\n\n@if(whileDragging()){\n\n\n  {{field().icon}}\n\n{{field().label}}\n\n\n}\n\n            \n\n\n\n\n            \n                styleUrl\n                ./field-button.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                whileDragging\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/field-button/field-button.ts:36\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/shared/field-button/field-button.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whileDragging\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/field-button/field-button.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, input, signal } from '@angular/core';\nimport {MatIconModule} from '@angular/material/icon';\nimport { FieldTypeDefinition } from '../../feature/models/field';\nimport {DragDropModule} from '@angular/cdk/drag-drop'\n@Component({\n  selector: 'app-field-button',\n  imports: [MatIconModule,DragDropModule],\n  // templateUrl: './field-button.html',\n  template: `\n    \n    \n      {{field().icon}}\n    \n    {{field().label}}\n    \n    \n    @if(whileDragging()){\n    \n    \n      {{field().icon}}\n    \n    {{field().label}}\n    \n    \n    }\n  `,\n  styleUrl: './field-button.scss'\n})\nexport class FieldButton {\n  field = input.required();\n  whileDragging = signal(false)\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{field().icon}}{{field().label}}@if(whileDragging()){  {{field().icon}}{{field().label}}}'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CheckboxField', 'selector': 'app-checkbox-field'},{'name': 'DateField', 'selector': 'app-date-field'},{'name': 'DynamicOptions', 'selector': 'app-dynamic-options'},{'name': 'FieldButton', 'selector': 'app-field-button'},{'name': 'FieldPreview', 'selector': 'app-field-preview'},{'name': 'FieldSettings', 'selector': 'app-field-settings'},{'name': 'FormEditor', 'selector': 'app-form-editor'},{'name': 'FormElementMenu', 'selector': 'app-form-element-menu'},{'name': 'FormFieldComponent', 'selector': 'app-form-field'},{'name': 'FormPreview', 'selector': 'app-form-preview'},{'name': 'MainCanvas', 'selector': 'app-main-canvas'},{'name': 'SelectField', 'selector': 'app-select-field'},{'name': 'TextField', 'selector': 'app-text-field'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FieldButton'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FieldPreview.html":{"url":"components/FieldPreview.html","title":"component - FieldPreview","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FieldPreview\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feature/components/main-canvas/field-preview/field-preview.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-field-preview\n            \n\n\n            \n                imports\n                \n                            NgComponentOutlet\n                \n            \n\n\n\n            \n                template\n                   \n\n            \n\n\n\n\n            \n                styleUrl\n                ./field-preview.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldTypesService\n                            \n                            \n                                previewComponent\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/feature/components/main-canvas/field-preview/field-preview.ts:19\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/feature/components/main-canvas/field-preview/field-preview.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fieldTypesService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FieldTypesService)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/components/main-canvas/field-preview/field-preview.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previewComponent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const type = this.fieldTypesService.getFieldType(this.field().type);\n    return type?.component ?? null;\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/components/main-canvas/field-preview/field-preview.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { NgComponentOutlet } from '@angular/common';\nimport { Component, computed, inject, input } from '@angular/core';\nimport { FieldTypesService } from '../../../services/field-types.service';\nimport { FormField } from '../../../models/field';\n\n@Component({\n  selector: 'app-field-preview',\n  imports: [NgComponentOutlet],\n  template: `\n         \n  `,\n  // templateUrl: './field-preview.html',\n  styleUrl: './field-preview.scss'\n})\nexport class FieldPreview {\n  field = input.required();\n  fieldTypesService = inject(FieldTypesService);\n\n  previewComponent = computed(() => {\n    const type = this.fieldTypesService.getFieldType(this.field().type);\n    return type?.component ?? null;\n  });\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CheckboxField', 'selector': 'app-checkbox-field'},{'name': 'DateField', 'selector': 'app-date-field'},{'name': 'DynamicOptions', 'selector': 'app-dynamic-options'},{'name': 'FieldButton', 'selector': 'app-field-button'},{'name': 'FieldPreview', 'selector': 'app-field-preview'},{'name': 'FieldSettings', 'selector': 'app-field-settings'},{'name': 'FormEditor', 'selector': 'app-form-editor'},{'name': 'FormElementMenu', 'selector': 'app-form-element-menu'},{'name': 'FormFieldComponent', 'selector': 'app-form-field'},{'name': 'FormPreview', 'selector': 'app-form-preview'},{'name': 'MainCanvas', 'selector': 'app-main-canvas'},{'name': 'SelectField', 'selector': 'app-select-field'},{'name': 'TextField', 'selector': 'app-text-field'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FieldPreview'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FieldSettings.html":{"url":"components/FieldSettings.html","title":"component - FieldSettings","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FieldSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feature/components/field-settings/field-settings.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-field-settings\n            \n\n\n            \n                imports\n                \n                                MatFormFieldModule\n                            FormsModule\n                            MatInput\n                            MatCheckboxModule\n                            MatSelectModule\n                                DynamicOptions\n                \n            \n\n\n\n            \n                template\n                \n  @if(formService.selectedField(); as selectedField){\n  Field Properties\n  \n    @for(setting of fieldSettings(); track setting.key){ @switch\n    (setting.type) { @case('text'){\n    \n      {{ setting.label }}\n      \n    \n    } @case('checkbox'){\n    \n      {{ setting.label }}\n    \n    } @case('select'){\n    \n      {{ setting.label }}\n      \n        @for(option of setting.options || []; track option.value){\n        \n          {{ option.label }}\n        \n        }\n      \n    \n    } @case('dynamic-options'){\n      \n    }\n\n  } }\n  \n  }\n\n\n            \n\n\n\n\n            \n                styleUrl\n                ./field-settings.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fieldSettings\n                            \n                            \n                                FieldTypesService\n                            \n                            \n                                fieldValues\n                            \n                            \n                                formService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateField\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/feature/components/field-settings/field-settings.ts:75\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateField\n                        \n                    \n                \n            \n            \n                \nupdateField(fieldId: string, key: string, value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/feature/components/field-settings/field-settings.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fieldId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fieldSettings\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const field = this.formService.selectedField();\n    if (!field) return [];\n\n    const fieldDef = this.FieldTypesService.getFieldType(field.type);\n    console.log(fieldDef, 'fieldDef');\n    return fieldDef?.settingsConfig || [];\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/components/field-settings/field-settings.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FieldTypesService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FieldTypesService)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/components/field-settings/field-settings.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fieldValues\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const field = this.formService.selectedField();\n    if (!field) return {};\n    return field as any;\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/components/field-settings/field-settings.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormService)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/components/field-settings/field-settings.ts:74\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed, effect, inject } from '@angular/core';\nimport { FormService } from '../../services/form.service';\nimport { FieldTypesService } from '../../services/field-types.service';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule } from '@angular/forms';\nimport { MatInput } from '@angular/material/input';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSelectModule } from '@angular/material/select';\nimport { DynamicOptions } from \"./dynamic-options/dynamic-options\";\n\n@Component({\n  selector: 'app-field-settings',\n  imports: [\n    MatFormFieldModule,\n    FormsModule,\n    MatInput,\n    MatCheckboxModule,\n    MatSelectModule,\n    DynamicOptions\n],\n  template: `\n    \n      @if(formService.selectedField(); as selectedField){\n      Field Properties\n      \n        @for(setting of fieldSettings(); track setting.key){ @switch\n        (setting.type) { @case('text'){\n        \n          {{ setting.label }}\n          \n        \n        } @case('checkbox'){\n        \n          {{ setting.label }}\n        \n        } @case('select'){\n        \n          {{ setting.label }}\n          \n            @for(option of setting.options || []; track option.value){\n            \n              {{ option.label }}\n            \n            }\n          \n        \n        } @case('dynamic-options'){\n          \n        }\n        \n      } }\n      \n      }\n    \n  `,\n  // templateUrl: './field-settings.html',\n  styleUrl: './field-settings.scss',\n})\nexport class FieldSettings {\n  formService = inject(FormService);\n  FieldTypesService = inject(FieldTypesService);\n  constructor() {\n    effect(() => {\n      console.log(this.fieldSettings(), 'this.fieldSettings');\n    });\n  }\n\n  fieldSettings = computed(() => {\n    const field = this.formService.selectedField();\n    if (!field) return [];\n\n    const fieldDef = this.FieldTypesService.getFieldType(field.type);\n    console.log(fieldDef, 'fieldDef');\n    return fieldDef?.settingsConfig || [];\n  });\n\n  fieldValues = computed(() => {\n    const field = this.formService.selectedField();\n    if (!field) return {};\n    return field as any;\n  });\n  updateField(fieldId: string, key: string, value: any) {\n    this.formService.updateField(fieldId,{[key]: value})\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if(formService.selectedField(); as selectedField){  Field Properties      @for(setting of fieldSettings(); track setting.key){ @switch    (setting.type) { @case(\\'text\\'){          {{ setting.label }}              } @case(\\'checkbox\\'){          {{ setting.label }}        } @case(\\'select\\'){          {{ setting.label }}              @for(option of setting.options || []; track option.value){                  {{ option.label }}                }              } @case(\\'dynamic-options\\'){          }  } }    }'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CheckboxField', 'selector': 'app-checkbox-field'},{'name': 'DateField', 'selector': 'app-date-field'},{'name': 'DynamicOptions', 'selector': 'app-dynamic-options'},{'name': 'FieldButton', 'selector': 'app-field-button'},{'name': 'FieldPreview', 'selector': 'app-field-preview'},{'name': 'FieldSettings', 'selector': 'app-field-settings'},{'name': 'FormEditor', 'selector': 'app-form-editor'},{'name': 'FormElementMenu', 'selector': 'app-form-element-menu'},{'name': 'FormFieldComponent', 'selector': 'app-form-field'},{'name': 'FormPreview', 'selector': 'app-form-preview'},{'name': 'MainCanvas', 'selector': 'app-main-canvas'},{'name': 'SelectField', 'selector': 'app-select-field'},{'name': 'TextField', 'selector': 'app-text-field'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FieldSettings'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FieldSettingsDefinition.html":{"url":"interfaces/FieldSettingsDefinition.html","title":"interface - FieldSettingsDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FieldSettingsDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/feature/models/field.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         OptionItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OptionItem[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"text\" | \"checkbox\" | \"select\" | \"dynamic-options\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"text\" | \"checkbox\" | \"select\" | \"dynamic-options\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type } from \"@angular/core\";\n\nexport interface FieldTypeDefinition{\n    type: string;\n    label: string;\n    icon: string;\n    defaultConfig:any;\n    settingsConfig: FieldSettingsDefinition[];\n    component:Type;\n    generateCode:(field: FormField) => string\n}\n\nexport interface FieldSettingsDefinition{\n    type: 'text' | 'checkbox' | 'select' | 'dynamic-options';\n    key: string;\n    label: string;\n    options?: OptionItem[];\n}\n\nexport interface OptionItem{\n    label: string;\n    value: string;\n}\n\nexport interface FormField{\n    id: string;\n    type: string;\n    label: string;\n    required: boolean;\n    inputType?: string;\n    placeholder?:string;\n    options: OptionItem[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FieldTypeDefinition.html":{"url":"interfaces/FieldTypeDefinition.html","title":"interface - FieldTypeDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FieldTypeDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/feature/models/field.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            component\n                                        \n                                \n                                \n                                        \n                                            defaultConfig\n                                        \n                                \n                                \n                                        \n                                            generateCode\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            settingsConfig\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component:     Type<>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type<>\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultConfig:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        generateCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        generateCode:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        settingsConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        settingsConfig:         FieldSettingsDefinition[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FieldSettingsDefinition[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type } from \"@angular/core\";\n\nexport interface FieldTypeDefinition{\n    type: string;\n    label: string;\n    icon: string;\n    defaultConfig:any;\n    settingsConfig: FieldSettingsDefinition[];\n    component:Type;\n    generateCode:(field: FormField) => string\n}\n\nexport interface FieldSettingsDefinition{\n    type: 'text' | 'checkbox' | 'select' | 'dynamic-options';\n    key: string;\n    label: string;\n    options?: OptionItem[];\n}\n\nexport interface OptionItem{\n    label: string;\n    value: string;\n}\n\nexport interface FormField{\n    id: string;\n    type: string;\n    label: string;\n    required: boolean;\n    inputType?: string;\n    placeholder?:string;\n    options: OptionItem[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FieldTypesService.html":{"url":"injectables/FieldTypesService.html","title":"injectable - FieldTypesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FieldTypesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/feature/services/field-types.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fieldTypes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllFieldTypes\n                            \n                            \n                                getFieldType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllFieldTypes\n                        \n                    \n                \n            \n            \n                \ngetAllFieldTypes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/feature/services/field-types.service.ts:163\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         FieldTypeDefinition[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldType\n                        \n                    \n                \n            \n            \n                \ngetFieldType(type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/feature/services/field-types.service.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FieldTypeDefinition | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fieldTypes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map([\n    ['text', TEXT_FIELD_DEFINATION],\n    ['checkbox', CHECKBOX_FIELD_DEFINITION],\n    ['select', SELECTED_FIELD_DEFINITION],\n    ['date', DATE_FIELD_DEFINITION]\n  ])\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/services/field-types.service.ts:154\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FieldTypeDefinition } from '../models/field';\nimport { TextField } from '../../shared/field-types/text-field/text-field';\nimport { CheckboxField } from '../../shared/field-types/checkbox-field/checkbox-field';\nimport { SelectField } from '../../shared/field-types/select-field/select-field';\nimport { DateField } from '../../shared/field-types/date-field/date-field';\nconst TEXT_FIELD_DEFINATION: FieldTypeDefinition = {\n  type: 'text',\n  label: 'Text field',\n  icon: 'text_fields',\n  defaultConfig: {\n    label: 'Text Field',\n    required: false,\n  },\n  settingsConfig: [\n    {\n      type: 'text',\n      key: 'label',\n      label: 'Label'\n    },\n    {\n      type: 'text',\n      key: 'placeholder',\n      label: 'Placeholder'\n    },\n    {\n      type: 'checkbox',\n      key: 'required',\n      label: 'Required'\n    },\n    {\n      type: 'select',\n      key: 'inputType',\n      label: 'Input Type',\n      options: [\n        {value: 'text',label:'text'},\n        {value: 'number',label:'Number'},\n        {value: 'email',label:'Email'},\n        {value: 'tel',label:'Phone'},\n      ]\n    },\n  ],\n\n  component: TextField,\n  generateCode: (field) => `\n    \n      ${field.label}\n      \n    \n    `\n\n};\nconst CHECKBOX_FIELD_DEFINITION: FieldTypeDefinition = {\n  type: 'checkbox',\n  label: 'Checkbox',\n  icon: ' check_box',\n  defaultConfig: {\n    label: 'Checkbox',\n    required: false,\n  },\n  settingsConfig: [],\n  component: CheckboxField,\n  generateCode: (field) => `\n    ${field.label}\\n\n  `\n};\n\nconst SELECTED_FIELD_DEFINITION: FieldTypeDefinition ={\n    type: 'select',\n    label: 'DropDown',\n    icon: 'arrow_drop_down_circle',\n    defaultConfig: {\n        label: 'Select',\n        required: false,\n        options: [\n            {value: 'option1', label: \"Option 1\"},\n            {value: 'option2', label: \"Option 2\"},\n            {value: 'option3', label: \"Option 3\"},\n        ]\n    },\n    settingsConfig:[\n        {type: 'text', key: 'label', label:'Label'},\n        {type: 'checkbox', key: 'required', label:'Required'},\n        {type: 'dynamic-options', key: 'options', label:'Dropdown Options'},\n    ],\n    component: SelectField,\n    generateCode: (field) => {\n\n      let code =\n      `\\n` +\n      `${field.label}\\n` +\n      `\\n`\n\n      if(field.options){\n        field.options.forEach(option => {\n          code += `${option.label}\\n`;\n        });\n      } else {\n        code +=\n          `  Option 1\\n` +\n          `  Option 2\\n` +\n          `  Option 3\\n`;\n      }\n      code += ` \\n` +`\\n `;\n      return code;\n    }\n}\n\nconst DATE_FIELD_DEFINITION: FieldTypeDefinition = {\n  type: 'date',\n  label: 'Date Picker',\n  icon: 'date_range',\n  defaultConfig:{\n    label: 'Choose a date',\n    required: false,\n  },\n  settingsConfig: [\n    {\n      type: 'text',\n      key: 'label',\n      label: 'Label'\n    },\n    {\n      type: 'checkbox',\n      key: 'required',\n      label: 'Required'\n    }\n\n  ],\n  component: DateField,\n  generateCode: (field) => `\n    \n      ${field.label}\n      \n    \n    `\n\n\n\n}\n@Injectable({\n  providedIn: 'root',\n})\nexport class FieldTypesService {\n  fieldTypes = new Map([\n    ['text', TEXT_FIELD_DEFINATION],\n    ['checkbox', CHECKBOX_FIELD_DEFINITION],\n    ['select', SELECTED_FIELD_DEFINITION],\n    ['date', DATE_FIELD_DEFINITION]\n  ]);\n  getFieldType(type: string): FieldTypeDefinition | undefined {\n    return this.fieldTypes.get(type);\n  }\n  getAllFieldTypes(): FieldTypeDefinition[] {\n    return Array.from(this.fieldTypes.values());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormEditor.html":{"url":"components/FormEditor.html","title":"component - FormEditor","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FormEditor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feature/components/main-canvas/form-editor/form-editor.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-editor\n            \n\n\n            \n                imports\n                \n                            DragDropModule\n                                FormFieldComponent\n                            MatIconModule\n                            MatButtonModule\n                            DragDropModule\n                \n            \n\n\n\n            \n                template\n                  \n    @for(row of formService.rows();track row.id){\n    \n      \n        Row\n        \n          close\n        \n      \n\n\t\n\t\tkeyboard_arrow_up\n\t\n\t\n\t\tkeyboard_arrow_down\n\t\n\n      \n        @for(field of row.fields; track field){\n        {{ field.label }} -->\n        \n        }@empty {\n        Drag and drop form element here\n        }\n      \n    \n    }\n  \n\n            \n\n\n\n\n            \n                styleUrl\n                ./form-editor.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onDropInRow\n                            \n                            \n                                test\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onDropInRow\n                        \n                    \n                \n            \n            \n                \nonDropInRow(event: CdkDragDrop, rowId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/feature/components/main-canvas/form-editor/form-editor.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        CdkDragDrop\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rowId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        test\n                        \n                    \n                \n            \n            \n                \ntest(row: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/feature/components/main-canvas/form-editor/form-editor.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                row\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormService)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/components/main-canvas/form-editor/form-editor.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CdkDragDrop, DragDropModule } from '@angular/cdk/drag-drop';\nimport { Component, inject } from '@angular/core';\nimport { FormService } from '../../../services/form.service';\nimport { FieldTypeDefinition, FormField } from '../../../models/field';\nimport { FormFieldComponent } from '../form-field/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\n@Component({\n  selector: 'app-form-editor',\n  imports: [\n    DragDropModule,\n    FormFieldComponent,\n    MatIconModule,\n    MatButtonModule,\n    DragDropModule,\n  ],\n  // templateUrl: './form-editor.html',\n  template: `\n    \n      @for(row of formService.rows();track row.id){\n      \n        \n          Row\n          \n            close\n          \n        \n\t\t\n\t\t\t\n\t\t\t\tkeyboard_arrow_up\n\t\t\t\n\t\t\t\n\t\t\t\tkeyboard_arrow_down\n\t\t\t\n\t\t\n        \n          @for(field of row.fields; track field){\n          {{ field.label }} -->\n          \n          }@empty {\n          Drag and drop form element here\n          }\n        \n      \n      }\n    \n  `,\n  styleUrl: './form-editor.scss',\n})\nexport class FormEditor {\n\ttest(row:any){\n\t\tconsole.log(row)\n\t}\n\tformService = inject(FormService);\n\tonDropInRow(event: CdkDragDrop, rowId: string) {\n\t\tif (event.previousContainer.data === 'field-selector') {\n\t\t\tconst fieldType = event.item.data as FieldTypeDefinition;\n\t\t\tconst newField: FormField = {\n\t\t\t\tid: crypto.randomUUID(),\n\t\t\t\ttype: fieldType.type,\n\t\t\t\t...fieldType.defaultConfig,\n\t\t\t};\n\t\t\tconsole.log(newField, \" newField\")\n\n\t\t\tthis.formService.addField(newField, rowId, event.currentIndex);\n\t\t\treturn;\n\t\t}\n\n\t\tconst dragData = event.item.data as FormField;\n    const previousRowId = event.previousContainer.data as string;\n\n    this.formService.moveField(\n      dragData.id,\n      previousRowId,\n      rowId,\n      event.currentIndex\n    );\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @for(row of formService.rows();track row.id){                  Row                  close              \t\t\tkeyboard_arrow_up\t\t\t\tkeyboard_arrow_down\t              @for(field of row.fields; track field){        {{ field.label }} -->                }@empty {        Drag and drop form element here        }              }  '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CheckboxField', 'selector': 'app-checkbox-field'},{'name': 'DateField', 'selector': 'app-date-field'},{'name': 'DynamicOptions', 'selector': 'app-dynamic-options'},{'name': 'FieldButton', 'selector': 'app-field-button'},{'name': 'FieldPreview', 'selector': 'app-field-preview'},{'name': 'FieldSettings', 'selector': 'app-field-settings'},{'name': 'FormEditor', 'selector': 'app-form-editor'},{'name': 'FormElementMenu', 'selector': 'app-form-element-menu'},{'name': 'FormFieldComponent', 'selector': 'app-form-field'},{'name': 'FormPreview', 'selector': 'app-form-preview'},{'name': 'MainCanvas', 'selector': 'app-main-canvas'},{'name': 'SelectField', 'selector': 'app-select-field'},{'name': 'TextField', 'selector': 'app-text-field'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormEditor'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormElementMenu.html":{"url":"components/FormElementMenu.html","title":"component - FormElementMenu","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FormElementMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feature/components/form-element-menu/form-element-menu.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-element-menu\n            \n\n\n            \n                imports\n                \n                                FieldButton\n                            DragDropModule\n                \n            \n\n\n\n            \n                template\n                \n  Form Elements\n  \n    @for(type of fieldTypes; track type.type){\n      \n    }\n  \n\n\n            \n\n\n\n\n            \n                styleUrl\n                ./form-element-menu.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fieldTypes\n                            \n                            \n                                fieldTypesService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                noDropAllowed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        noDropAllowed\n                        \n                    \n                \n            \n            \n                \nnoDropAllowed(item: CdkDrag)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/feature/components/form-element-menu/form-element-menu.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                        CdkDrag\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fieldTypes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fieldTypesService.getAllFieldTypes()\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/components/form-element-menu/form-element-menu.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fieldTypesService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FieldTypesService)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/components/form-element-menu/form-element-menu.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { FieldTypesService } from '../../services/field-types.service';\nimport { FieldButton } from \"../../../shared/field-button/field-button\";\nimport { CdkDrag, DragDropModule } from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'app-form-element-menu',\n  imports: [FieldButton ,DragDropModule],\n  // templateUrl: './form-element-menu.html',\n  template:`\n  \n    Form Elements\n    \n      @for(type of fieldTypes; track type.type){\n        \n      }\n    \n  \n  `,\n  styleUrl: './form-element-menu.scss'\n})\nexport class FormElementMenu {\nfieldTypesService = inject(FieldTypesService)\n\nfieldTypes = this.fieldTypesService.getAllFieldTypes()\n\nnoDropAllowed(item: CdkDrag){\n  return false;\n}\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Form Elements      @for(type of fieldTypes; track type.type){          }  '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CheckboxField', 'selector': 'app-checkbox-field'},{'name': 'DateField', 'selector': 'app-date-field'},{'name': 'DynamicOptions', 'selector': 'app-dynamic-options'},{'name': 'FieldButton', 'selector': 'app-field-button'},{'name': 'FieldPreview', 'selector': 'app-field-preview'},{'name': 'FieldSettings', 'selector': 'app-field-settings'},{'name': 'FormEditor', 'selector': 'app-form-editor'},{'name': 'FormElementMenu', 'selector': 'app-form-element-menu'},{'name': 'FormFieldComponent', 'selector': 'app-form-field'},{'name': 'FormPreview', 'selector': 'app-form-preview'},{'name': 'MainCanvas', 'selector': 'app-main-canvas'},{'name': 'SelectField', 'selector': 'app-select-field'},{'name': 'TextField', 'selector': 'app-text-field'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormElementMenu'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormField.html":{"url":"interfaces/FormField.html","title":"interface - FormField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FormField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/feature/models/field.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            inputType\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                        \n                                            required\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inputType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         OptionItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OptionItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type } from \"@angular/core\";\n\nexport interface FieldTypeDefinition{\n    type: string;\n    label: string;\n    icon: string;\n    defaultConfig:any;\n    settingsConfig: FieldSettingsDefinition[];\n    component:Type;\n    generateCode:(field: FormField) => string\n}\n\nexport interface FieldSettingsDefinition{\n    type: 'text' | 'checkbox' | 'select' | 'dynamic-options';\n    key: string;\n    label: string;\n    options?: OptionItem[];\n}\n\nexport interface OptionItem{\n    label: string;\n    value: string;\n}\n\nexport interface FormField{\n    id: string;\n    type: string;\n    label: string;\n    required: boolean;\n    inputType?: string;\n    placeholder?:string;\n    options: OptionItem[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormFieldComponent.html":{"url":"components/FormFieldComponent.html","title":"component - FormFieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FormFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feature/components/main-canvas/form-field/form-field.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-field\n            \n\n\n            \n                imports\n                \n                            TitleCasePipe\n                            MatButtonModule\n                            MatIconModule\n                                FieldPreview\n                \n            \n\n\n\n            \n                template\n                \n  \n    {{ field().type | titlecase }}\n    \n      delete\n    \n  \n  \n\n\n            \n\n\n\n\n            \n                styleUrl\n                ./form-field.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldTypesService\n                            \n                            \n                                formService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteField\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/feature/components/main-canvas/form-field/form-field.ts:29\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteField\n                        \n                    \n                \n            \n            \n                \ndeleteField(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/feature/components/main-canvas/form-field/form-field.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/feature/components/main-canvas/form-field/form-field.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fieldTypesService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FieldTypesService)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/components/main-canvas/form-field/form-field.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormService)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/components/main-canvas/form-field/form-field.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed, inject, input } from '@angular/core';\nimport { FieldTypesService } from '../../../services/field-types.service';\nimport { FormField } from '../../../models/field';\nimport { NgComponentOutlet, TitleCasePipe } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FormService } from '../../../services/form.service';\nimport { FieldPreview } from \"../field-preview/field-preview\";\n@Component({\n  selector: 'app-form-field',\n  imports: [ TitleCasePipe, MatButtonModule, MatIconModule, FieldPreview],\n  // templateUrl: './form-field.html',\n  template: `\n    \n      \n        {{ field().type | titlecase }}\n        \n          delete\n        \n      \n      \n    \n  `,\n  styleUrl: './form-field.scss',\n})\nexport class FormFieldComponent {\n  field = input.required();\n  formService = inject(FormService);\n  fieldTypesService = inject(FieldTypesService);\n\n  deleteField(e: Event) {\n    e.stopPropagation();\n    this.formService.deleteField(this.field().id);\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ field().type | titlecase }}          delete        '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CheckboxField', 'selector': 'app-checkbox-field'},{'name': 'DateField', 'selector': 'app-date-field'},{'name': 'DynamicOptions', 'selector': 'app-dynamic-options'},{'name': 'FieldButton', 'selector': 'app-field-button'},{'name': 'FieldPreview', 'selector': 'app-field-preview'},{'name': 'FieldSettings', 'selector': 'app-field-settings'},{'name': 'FormEditor', 'selector': 'app-form-editor'},{'name': 'FormElementMenu', 'selector': 'app-form-element-menu'},{'name': 'FormFieldComponent', 'selector': 'app-form-field'},{'name': 'FormPreview', 'selector': 'app-form-preview'},{'name': 'MainCanvas', 'selector': 'app-main-canvas'},{'name': 'SelectField', 'selector': 'app-select-field'},{'name': 'TextField', 'selector': 'app-text-field'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormFieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormPreview.html":{"url":"components/FormPreview.html","title":"component - FormPreview","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FormPreview\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feature/components/main-canvas/form-preview/form-preview.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-preview\n            \n\n\n            \n                imports\n                \n                                FieldPreview\n                \n            \n\n\n\n            \n                template\n                \n  @for(row of formService.rows(); track row.id){\n    \n      @for(field of row.fields; track field.id){\n      \n      }\n    \n  }\n\n\n            \n\n\n\n\n            \n                styleUrl\n                ./form-preview.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormService)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/components/main-canvas/form-preview/form-preview.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, input } from '@angular/core';\nimport { FormService } from '../../../services/form.service';\nimport { FormField } from '../../../models/field';\nimport { FieldPreview } from \"../field-preview/field-preview\";\n\n@Component({\n  selector: 'app-form-preview',\n  imports: [FieldPreview],\n  template: `\n  \n    @for(row of formService.rows(); track row.id){\n      \n        @for(field of row.fields; track field.id){\n        \n        }\n      \n    }\n  \n  `,\n  // templateUrl: './form-preview.html',\n  styleUrl: './form-preview.scss'\n})\nexport class FormPreview {\nformService = inject(FormService)\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @for(row of formService.rows(); track row.id){          @for(field of row.fields; track field.id){            }      }'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CheckboxField', 'selector': 'app-checkbox-field'},{'name': 'DateField', 'selector': 'app-date-field'},{'name': 'DynamicOptions', 'selector': 'app-dynamic-options'},{'name': 'FieldButton', 'selector': 'app-field-button'},{'name': 'FieldPreview', 'selector': 'app-field-preview'},{'name': 'FieldSettings', 'selector': 'app-field-settings'},{'name': 'FormEditor', 'selector': 'app-form-editor'},{'name': 'FormElementMenu', 'selector': 'app-form-element-menu'},{'name': 'FormFieldComponent', 'selector': 'app-form-field'},{'name': 'FormPreview', 'selector': 'app-form-preview'},{'name': 'MainCanvas', 'selector': 'app-main-canvas'},{'name': 'SelectField', 'selector': 'app-select-field'},{'name': 'TextField', 'selector': 'app-text-field'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormPreview'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormRow.html":{"url":"interfaces/FormRow.html","title":"interface - FormRow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FormRow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/feature/models/form.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fields\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fields:         FormField[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormField[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormField } from \"./field\";\n\nexport interface FormRow{\n    id: string;\n    fields: FormField[]\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormService.html":{"url":"injectables/FormService.html","title":"injectable - FormService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/feature/services/form.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _rows\n                            \n                            \n                                    Private\n                                _selectedFieldId\n                            \n                            \n                                    Private\n                                appRef\n                            \n                            \n                                fieldTypesService\n                            \n                            \n                                    Public\n                                    Readonly\n                                rows\n                            \n                            \n                                    Public\n                                    Readonly\n                                selectedField\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addField\n                            \n                            \n                                addRow\n                            \n                            \n                                deleteField\n                            \n                            \n                                deleteRow\n                            \n                            \n                                exportForm\n                            \n                            \n                                generateComponentDecorator\n                            \n                            \n                                generateFieldCode\n                            \n                            \n                                generateFormCode\n                            \n                            \n                                generateImports\n                            \n                            \n                                moveField\n                            \n                            \n                                moveRowDown\n                            \n                            \n                                moveRowUp\n                            \n                            \n                                setSelectedfield\n                            \n                            \n                                updateField\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/feature/services/form.service.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addField\n                        \n                    \n                \n            \n            \n                \naddField(field: FormField, rowId: string, index?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/feature/services/form.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            FormField\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rowId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addRow\n                        \n                    \n                \n            \n            \n                \naddRow()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/feature/services/form.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteField\n                        \n                    \n                \n            \n            \n                \ndeleteField(fieldId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/feature/services/form.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fieldId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteRow\n                        \n                    \n                \n            \n            \n                \ndeleteRow(nowId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/feature/services/form.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nowId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportForm\n                        \n                    \n                \n            \n            \n                \nexportForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/feature/services/form.service.ts:178\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateComponentDecorator\n                        \n                    \n                \n            \n            \n                \ngenerateComponentDecorator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/feature/services/form.service.ts:235\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateFieldCode\n                        \n                    \n                \n            \n            \n                \ngenerateFieldCode(field: FormField)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/feature/services/form.service.ts:216\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            FormField\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateFormCode\n                        \n                    \n                \n            \n            \n                \ngenerateFormCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/feature/services/form.service.ts:191\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateImports\n                        \n                    \n                \n            \n            \n                \ngenerateImports()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/feature/services/form.service.ts:221\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moveField\n                        \n                    \n                \n            \n            \n                \nmoveField(fieldId: string, sourceRowId: string, targetRowId: string, targetIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/feature/services/form.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                fieldId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                sourceRowId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                targetRowId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                targetIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    -1\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moveRowDown\n                        \n                    \n                \n            \n            \n                \nmoveRowDown(rowId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/feature/services/form.service.ts:164\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                rowId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moveRowUp\n                        \n                    \n                \n            \n            \n                \nmoveRowUp(rowId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/feature/services/form.service.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                rowId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelectedfield\n                        \n                    \n                \n            \n            \n                \nsetSelectedfield(fieldId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/feature/services/form.service.ts:134\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fieldId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateField\n                        \n                    \n                \n            \n            \n                \nupdateField(fieldId: string, data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/feature/services/form.service.ts:138\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fieldId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _rows\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/services/form.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _selectedFieldId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/services/form.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        appRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ApplicationRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/services/form.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fieldTypesService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FieldTypesService)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/services/form.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        rows\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._rows.asReadonly()\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/services/form.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        selectedField\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() =>\n    this._rows()\n      .flatMap((row) => row.fields)\n      .find((f) => f.id === this._selectedFieldId())\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/services/form.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ApplicationRef, computed, effect, inject, Injectable, signal } from '@angular/core';\nimport { FormRow } from '../models/form';\nimport { FormField } from '../models/field';\nimport { FieldTypesService } from './field-types.service';\nimport { startViewTransition } from '../utils/view-transition';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FormService {\n  fieldTypesService = inject(FieldTypesService);\n  private _rows = signal([]);\n  private _selectedFieldId = signal(null);\n  public readonly rows = this._rows.asReadonly();\n  private appRef = inject(ApplicationRef)\n  public readonly selectedField = computed(() =>\n    this._rows()\n      .flatMap((row) => row.fields)\n      .find((f) => f.id === this._selectedFieldId())\n  );\n  constructor() {\n    effect(() =>{\n      console.log(this.rows,\"readonly  rows\")\n      console.log(this._rows(),\"_rows\")\n      console.log(this._rows().flatMap(row => row.fields).find((f) => f.id ===this._selectedFieldId()), \"selectedField\")\n      // console.log(this.selectedField(), \"selectedField\")\n\n    })\n    this._rows.set([\n      {\n        id: crypto.randomUUID(),\n        fields: [],\n      },\n    ]);\n  }\n  addField(field: FormField, rowId: string, index?: number) {\n    const rows = this._rows();\n    const newRows = rows.map((row) => {\n      if (row.id === rowId) {\n        const updatedFields = [...row.fields];\n        if (index !== undefined) {\n          updatedFields.splice(index, 0, field);\n        } else {\n          updatedFields.push(field);\n        }\n\n        return { ...row, fields: updatedFields };\n      }\n\n      return row;\n    });\n    startViewTransition(() =>{\n      this._rows.set(newRows);\n    })\n  }\n\n  deleteField(fieldId: string) {\n    const rows = this._rows();\n    const newRows = rows.map((row) => ({\n      ...row,\n      fields: row.fields.filter((f) => f.id !== fieldId),\n    }));\n    startViewTransition(() =>{\n      this._rows.set(newRows);\n      this.appRef.tick(); // Ensure the view is updated\n    })\n  }\n\n  addRow() {\n    const newRow: FormRow = {\n      id: crypto.randomUUID(),\n      fields: [],\n    };\n\n    const row = this._rows();\n\n    startViewTransition(() =>{\n\n      this._rows.set([...row, newRow]);\n    })\n  }\n\n  deleteRow(nowId: string) {\n    if (this._rows().length === 1) {\n      return;\n    }\n    const rows = this._rows();\n    const newRows = rows.filter((row) => row.id !== nowId);\n    startViewTransition(() =>{\n      this._rows.set(newRows);\n      this.appRef.tick(); // Ensure the view is updated\n    })\n  }\n\n  moveField(\n    fieldId: string,\n    sourceRowId: string,\n    targetRowId: string,\n    targetIndex: number = -1\n  ) {\n    const rows = this._rows();\n\n    let fieldToMove: FormField | undefined;\n    let sourceRowIndex = -1;\n    let sourceFieldIndex = -1;\n\n    rows.forEach((row, rowIndex) => {\n      if (row.id === sourceRowId) {\n        sourceRowIndex = rowIndex;\n        sourceFieldIndex = row.fields.findIndex((f) => f.id === fieldId);\n        if (sourceFieldIndex >= 0) {\n          fieldToMove = row.fields[sourceFieldIndex];\n        }\n      }\n    });\n\n    if (!fieldToMove) return;\n\n    const newRows = [...rows];\n    const fieldsWithRemovedFieldId = newRows[sourceRowIndex].fields.filter(\n      (f) => f.id !== fieldId\n    );\n    newRows[sourceRowIndex].fields = fieldsWithRemovedFieldId;\n\n    const targetRowIndex = newRows.findIndex((r) => r.id === targetRowId);\n    if (targetRowIndex >= 0) {\n      const targetFields = [...newRows[targetRowIndex].fields];\n      targetFields.splice(targetIndex, 0, fieldToMove);\n      newRows[targetRowIndex].fields = targetFields;\n    }\n    this.rows();\n  }\n\n  setSelectedfield(fieldId: string){\n    this._selectedFieldId.set(fieldId)\n  }\n\n  updateField(fieldId: string, data:Partial ){\n    const rows = this._rows();\n    const newRows = rows.map(row =>({\n      ...row,\n      fields: row.fields.map(f => f.id === fieldId ? {...f, ...data} :f)\n    }));\n    startViewTransition(() =>{\n      this._rows.set(newRows);\n      this.appRef.tick(); // Ensure the view is updated\n    })\n  }\n\n  moveRowUp(rowId: string){\n    const rows = this._rows();\n    const index = rows.findIndex(r => r.id === rowId);\n    if(index > 0){\n      const newRows = [...rows];\n      const temp = newRows[index - 1];\n      newRows[index - 1] = newRows[index];\n      newRows[index] = temp;\n      startViewTransition(() =>{\n        this._rows.set(newRows);\n        this.appRef.tick(); // Ensure the view is updated\n      })\n    }\n  }\n  moveRowDown(rowId: string){\n    const rows = this._rows();\n    const index = rows.findIndex(r => r.id === rowId);\n    const newRows = [...rows];\n    const temp =  newRows[index + 1]\n    newRows[index + 1] = newRows[index];\n    newRows[index] = temp;\n    startViewTransition(() =>{\n      this._rows.set(newRows);\n      this.appRef.tick(); // Ensure the view is updated\n    })\n  }\n\n  //Export Related functionality\n  exportForm(){\n    const formCode = this.generateFormCode();\n    console.log(formCode, \"Generated Form Code\");\n    const blob = new Blob([formCode], { type: 'text/plain'});\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'form.ts';\n    link.click();\n    window.URL.revokeObjectURL(url);\n\n  }\n\n  generateFormCode(): string{\n    let code = this.generateImports();\n    code += this.generateComponentDecorator();\n    code += ` template: \\` \\n`;\n    code += `  \\n`;\n    for(const row of this._rows()){\n      if(row.fields.length > 0){\n        code += `  \\n`;\n        for(const field of row.fields){\n          code += `\\n`;\n          code += this.generateFieldCode(field);\n          code += `  \\n`;\n        }\n        code += `  \\n`;\n      }\n    }\n    code += `  \\n`;\n    code += `  \\`\\n`;\n    code += `  })\\n`;\n    code += `  export class GeneratedFormComponent {\\n`;\n    code += `  }\\n`;\n\n    return code;\n  }\n\n  generateFieldCode(field: FormField): string{\n    const fieldDef = this.fieldTypesService.getFieldType(field.type);\n    return fieldDef?.generateCode(field) || ''\n  }\n\n  generateImports(): string{\n    return(\n      `import {Component} from '@angular/core';\\n` +\n      `import {CommonModule} from '@angular/common';\\n` +\n      `import {MatInputModule} from '@angular/material/input';\\n` +\n      `import {MatButtonModule} from '@angular/material/button';\\n` +\n      `import {MatIconModule} from '@angular/material/icon';\\n` +\n      `import {MatFormFieldModule} from '@angular/material/form-field';\\n` +\n      `import {MatSelectModule} from '@angular/material/select';\\n` +\n      `import {MatCheckboxModule} from '@angular/material/checkbox';\\n` +\n      `import {MatRadioModule} from '@angular/material/radio';\\n` +\n      `import {MatDatepickerModule} from '@angular/material/datepicker';\\n\\n`\n    )\n  }\n  generateComponentDecorator():string{\n    return (\n\n      `@Component({\\n` +\n      `  selector: 'app-dynamic-form',\\n` +\n      `  standalone: true,\\n` +\n      `  imports: [\\n` +\n      `    CommonModule,\\n` +\n      `    ReactiveFormsModule,\\n` +\n      `    MatInputModule,\\n` +\n      `    MatButtonModule\\n` +\n      `    MatIconModule\\n` +\n      `    MatFormFieldModule\\n` +\n      `    MatSelectModule\\n` +\n      `    MatCheckboxModule\\n` +\n      `    MatRadioModule\\n` +\n      `    MatDatepickerModule\\n` +\n      `  ],\\n`\n    )\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainCanvas.html":{"url":"components/MainCanvas.html","title":"component - MainCanvas","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainCanvas\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feature/components/main-canvas/main-canvas.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-canvas\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                FormEditor\n                            MatButtonToggleModule\n                                FormPreview\n                            MatIconModule\n                            MatButtonModule\n                            CommonModule\n                \n            \n\n\n\n            \n                template\n                \n  \n    Form Canvas\n    \n      \n        Editor\n        Preview\n      \n\n      \n      \n        Add Row\n        add_circle\n      \n    \n  \n\n  \n  \n    \n      @if(activeTab() === 'editor'){\n        \n      } @else if(activeTab() === 'preview') {\n        \n      }\n    \n  \n\n\n\n            \n\n\n\n\n            \n                styleUrl\n                ./main-canvas.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeTab\n                            \n                            \n                                formService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRow\n                        \n                    \n                \n            \n            \n                \naddRow()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/feature/components/main-canvas/main-canvas.ts:105\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeTab\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('editor')\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/components/main-canvas/main-canvas.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormService)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/components/main-canvas/main-canvas.ts:103\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, signal } from '@angular/core';\nimport { FormEditor } from './form-editor/form-editor';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { FormPreview } from \"./form-preview/form-preview\";\nimport { FieldPreview } from \"./field-preview/field-preview\";\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { CommonModule } from '@angular/common'; // Import CommonModule for directives like @if\nimport { FormService } from '../../services/form.service';\n\n@Component({\n  selector: 'app-main-canvas',\n  standalone: true, // Assuming this is a standalone component based on the imports array\n  imports: [\n    FormEditor,\n    MatButtonToggleModule,\n    FormPreview,\n    MatIconModule,\n    MatButtonModule,\n    CommonModule // CommonModule is needed for @if\n  ],\n  template: `\n    \n      \n        Form Canvas\n        \n          \n            Editor\n            Preview\n          \n\n          \n          \n            Add Row\n            add_circle\n          \n        \n      \n\n      \n      \n        \n          @if(activeTab() === 'editor'){\n            \n          } @else if(activeTab() === 'preview') {\n            \n          }\n        \n      \n    \n    \n  `,\n  styleUrl: './main-canvas.scss',\n  animations: [\n    // This animation handles the fade-in/fade-out of the main content area\n    trigger('tabFade', [\n      state('editor', style({ opacity: 1, transform: 'translateY(0)' })),\n      state('preview', style({ opacity: 1, transform: 'translateY(0)' })),\n      transition('*  *', [\n        style({ opacity: 0, transform: 'translateY(20px)' }),\n        animate('300ms ease-out')\n      ])\n    ]),\n\n    // This animation handles the slide/fade of the 'Add Row' button\n    trigger('buttonVisibility', [\n      // The 'visible' state for the button\n      state('visible', style({\n        opacity: 1,\n        transform: 'scale(1)',\n        width: '*' // Using '*' to allow width to be dynamic\n      })),\n\n      // The 'hidden' state for the button\n      state('hidden', style({\n        opacity: 0,\n        transform: 'scale(0.5)',\n        width: '0px',\n        margin: '0',\n        padding: '0'\n      })),\n\n      // The transition between states\n      transition('visible  hidden', [\n        animate('200ms ease-in-out')\n      ])\n    ])\n  ],\n})\nexport class MainCanvas {\n  // field = input.required();\n  activeTab = signal('editor');\n  formService = inject(FormService)\n  // Method to be called when the button is clicked (you can add your logic here)\n  addRow() {\n  this.formService.addRow()\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Form Canvas                  Editor        Preview                          Add Row        add_circle                          @if(activeTab() === \\'editor\\'){              } @else if(activeTab() === \\'preview\\') {              }      '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CheckboxField', 'selector': 'app-checkbox-field'},{'name': 'DateField', 'selector': 'app-date-field'},{'name': 'DynamicOptions', 'selector': 'app-dynamic-options'},{'name': 'FieldButton', 'selector': 'app-field-button'},{'name': 'FieldPreview', 'selector': 'app-field-preview'},{'name': 'FieldSettings', 'selector': 'app-field-settings'},{'name': 'FormEditor', 'selector': 'app-form-editor'},{'name': 'FormElementMenu', 'selector': 'app-form-element-menu'},{'name': 'FormFieldComponent', 'selector': 'app-form-field'},{'name': 'FormPreview', 'selector': 'app-form-preview'},{'name': 'MainCanvas', 'selector': 'app-main-canvas'},{'name': 'SelectField', 'selector': 'app-select-field'},{'name': 'TextField', 'selector': 'app-text-field'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainCanvas'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OptionItem.html":{"url":"interfaces/OptionItem.html","title":"interface - OptionItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OptionItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/feature/models/field.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type } from \"@angular/core\";\n\nexport interface FieldTypeDefinition{\n    type: string;\n    label: string;\n    icon: string;\n    defaultConfig:any;\n    settingsConfig: FieldSettingsDefinition[];\n    component:Type;\n    generateCode:(field: FormField) => string\n}\n\nexport interface FieldSettingsDefinition{\n    type: 'text' | 'checkbox' | 'select' | 'dynamic-options';\n    key: string;\n    label: string;\n    options?: OptionItem[];\n}\n\nexport interface OptionItem{\n    label: string;\n    value: string;\n}\n\nexport interface FormField{\n    id: string;\n    type: string;\n    label: string;\n    required: boolean;\n    inputType?: string;\n    placeholder?:string;\n    options: OptionItem[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectField.html":{"url":"components/SelectField.html","title":"component - SelectField","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SelectField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/field-types/select-field/select-field.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-select-field\n            \n\n\n            \n                imports\n                \n                            MatInputModule\n                            MatSelectModule\n                \n            \n\n\n\n            \n                template\n                \n  {{field().label}}\n  \n    @if(field().options){\n      @for(option of field().options; track option.value){\n        {{option.label}}\n      }\n    }@else{\n      Option 1\n      Option 2\n      Option 3\n    }\n    \n\n\n            \n\n\n\n\n            \n                styleUrl\n                ./select-field.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/field-types/select-field/select-field.ts:29\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/shared/field-types/select-field/select-field.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, input } from '@angular/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { FormField } from '../../../feature/models/field';\n\n@Component({\n  selector: 'app-select-field',\n  imports: [MatInputModule,MatSelectModule],\n  // templateUrl: './select-field.html',\n  template: `\n    \n      {{field().label}}\n      \n        @if(field().options){\n          @for(option of field().options; track option.value){  \n            {{option.label}}\n          }\n        }@else{\n          Option 1\n          Option 2\n          Option 3\n        }\n        \n    \n  `,\n  styleUrl: './select-field.scss',\n})\nexport class SelectField {\nfield = input.required()\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{field().label}}      @if(field().options){      @for(option of field().options; track option.value){        {{option.label}}      }    }@else{      Option 1      Option 2      Option 3    }    '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CheckboxField', 'selector': 'app-checkbox-field'},{'name': 'DateField', 'selector': 'app-date-field'},{'name': 'DynamicOptions', 'selector': 'app-dynamic-options'},{'name': 'FieldButton', 'selector': 'app-field-button'},{'name': 'FieldPreview', 'selector': 'app-field-preview'},{'name': 'FieldSettings', 'selector': 'app-field-settings'},{'name': 'FormEditor', 'selector': 'app-form-editor'},{'name': 'FormElementMenu', 'selector': 'app-form-element-menu'},{'name': 'FormFieldComponent', 'selector': 'app-form-field'},{'name': 'FormPreview', 'selector': 'app-form-preview'},{'name': 'MainCanvas', 'selector': 'app-main-canvas'},{'name': 'SelectField', 'selector': 'app-select-field'},{'name': 'TextField', 'selector': 'app-text-field'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectField'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextField.html":{"url":"components/TextField.html","title":"component - TextField","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/field-types/text-field/text-field.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-text-field\n            \n\n\n            \n                imports\n                \n                                MatFormFieldModule\n                            MatInputModule\n                \n            \n\n\n\n            \n                template\n                \n  {{ field().label }}\n  \n\n\n            \n\n\n\n\n            \n                styleUrl\n                ./text-field.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/field-types/text-field/text-field.ts:23\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/shared/field-types/text-field/text-field.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, input } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormField } from '../../../feature/models/field';\n@Component({\n  selector: 'app-text-field',\n  imports: [MatFormFieldModule, MatInputModule],\n  // templateUrl: './text-field.html',\n  template: `\n    \n      {{ field().label }}\n      \n    \n  `,\n  styleUrl: './text-field.scss',\n})\nexport class TextField {\n  field = input.required();\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ field().label }}  '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CheckboxField', 'selector': 'app-checkbox-field'},{'name': 'DateField', 'selector': 'app-date-field'},{'name': 'DynamicOptions', 'selector': 'app-dynamic-options'},{'name': 'FieldButton', 'selector': 'app-field-button'},{'name': 'FieldPreview', 'selector': 'app-field-preview'},{'name': 'FieldSettings', 'selector': 'app-field-settings'},{'name': 'FormEditor', 'selector': 'app-form-editor'},{'name': 'FormElementMenu', 'selector': 'app-form-element-menu'},{'name': 'FormFieldComponent', 'selector': 'app-form-field'},{'name': 'FormPreview', 'selector': 'app-form-preview'},{'name': 'MainCanvas', 'selector': 'app-main-canvas'},{'name': 'SelectField', 'selector': 'app-select-field'},{'name': 'TextField', 'selector': 'app-text-field'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextField'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.ts\n            \n            component\n            App\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/feature/components/field-settings/dynamic-options/dynamic-options.ts\n            \n            component\n            DynamicOptions\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/feature/components/field-settings/field-settings.ts\n            \n            component\n            FieldSettings\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/feature/components/form-element-menu/form-element-menu.ts\n            \n            component\n            FormElementMenu\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/feature/components/main-canvas/field-preview/field-preview.ts\n            \n            component\n            FieldPreview\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/feature/components/main-canvas/form-editor/form-editor.ts\n            \n            component\n            FormEditor\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/feature/components/main-canvas/form-field/form-field.ts\n            \n            component\n            FormFieldComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/feature/components/main-canvas/form-preview/form-preview.ts\n            \n            component\n            FormPreview\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/feature/components/main-canvas/main-canvas.ts\n            \n            component\n            MainCanvas\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/feature/models/field.ts\n            \n            interface\n            FieldSettingsDefinition\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/feature/models/field.ts\n            \n            interface\n            FieldTypeDefinition\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/feature/models/field.ts\n            \n            interface\n            FormField\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/feature/models/field.ts\n            \n            interface\n            OptionItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/feature/models/form.ts\n            \n            interface\n            FormRow\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/feature/services/field-types.service.ts\n            \n            injectable\n            FieldTypesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/feature/services/field-types.service.ts\n            \n            variable\n            CHECKBOX_FIELD_DEFINITION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/feature/services/field-types.service.ts\n            \n            variable\n            DATE_FIELD_DEFINITION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/feature/services/field-types.service.ts\n            \n            variable\n            SELECTED_FIELD_DEFINITION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/feature/services/field-types.service.ts\n            \n            variable\n            TEXT_FIELD_DEFINATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/feature/services/form.service.ts\n            \n            injectable\n            FormService\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                        src/app/feature/utils/view-transition.ts\n            \n            variable\n            startViewTransition\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/field-button/field-button.ts\n            \n            component\n            FieldButton\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/field-types/checkbox-field/checkbox-field.ts\n            \n            component\n            CheckboxField\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/field-types/date-field/date-field.ts\n            \n            component\n            DateField\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/field-types/select-field/select-field.ts\n            \n            component\n            SelectField\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/field-types/text-field/text-field.ts\n            \n            component\n            TextField\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^20.1.7\n        \n            @angular/cdk : ^20.1.6\n        \n            @angular/common : ^20.1.0\n        \n            @angular/compiler : ^20.1.0\n        \n            @angular/core : ^20.1.0\n        \n            @angular/forms : ^20.1.0\n        \n            @angular/material : ^20.1.6\n        \n            @angular/platform-browser : ^20.1.0\n        \n            @angular/router : ^20.1.0\n        \n            @tailwindcss/postcss : ^4.1.12\n        \n            postcss : ^8.5.6\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDynamicFormBuilder\nThis project was generated using Angular CLI version 20.1.4.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            CHECKBOX_FIELD_DEFINITION   (src/.../field-types.service.ts)\n                        \n                        \n                            DATE_FIELD_DEFINITION   (src/.../field-types.service.ts)\n                        \n                        \n                            SELECTED_FIELD_DEFINITION   (src/.../field-types.service.ts)\n                        \n                        \n                            startViewTransition   (src/.../view-transition.ts)\n                        \n                        \n                            TEXT_FIELD_DEFINATION   (src/.../field-types.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZonelessChangeDetection(),\n    provideRouter(routes),\n    provideAnimations(),\n    {\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n      useValue: {\n        appearance: 'outline',\n        subscriptSizing: 'dynamic'\n      }\n    }\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/feature/services/field-types.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CHECKBOX_FIELD_DEFINITION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FieldTypeDefinition\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'checkbox',\n  label: 'Checkbox',\n  icon: ' check_box',\n  defaultConfig: {\n    label: 'Checkbox',\n    required: false,\n  },\n  settingsConfig: [],\n  component: CheckboxField,\n  generateCode: (field) => `\n    ${field.label}\\n\n  `\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_FIELD_DEFINITION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FieldTypeDefinition\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'date',\n  label: 'Date Picker',\n  icon: 'date_range',\n  defaultConfig:{\n    label: 'Choose a date',\n    required: false,\n  },\n  settingsConfig: [\n    {\n      type: 'text',\n      key: 'label',\n      label: 'Label'\n    },\n    {\n      type: 'checkbox',\n      key: 'required',\n      label: 'Required'\n    }\n\n  ],\n  component: DateField,\n  generateCode: (field) => `\n    \n      ${field.label}\n      \n    \n    `\n\n\n\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SELECTED_FIELD_DEFINITION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FieldTypeDefinition\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: 'select',\n    label: 'DropDown',\n    icon: 'arrow_drop_down_circle',\n    defaultConfig: {\n        label: 'Select',\n        required: false,\n        options: [\n            {value: 'option1', label: \"Option 1\"},\n            {value: 'option2', label: \"Option 2\"},\n            {value: 'option3', label: \"Option 3\"},\n        ]\n    },\n    settingsConfig:[\n        {type: 'text', key: 'label', label:'Label'},\n        {type: 'checkbox', key: 'required', label:'Required'},\n        {type: 'dynamic-options', key: 'options', label:'Dropdown Options'},\n    ],\n    component: SelectField,\n    generateCode: (field) => {\n\n      let code =\n      `\\n` +\n      `${field.label}\\n` +\n      `\\n`\n\n      if(field.options){\n        field.options.forEach(option => {\n          code += `${option.label}\\n`;\n        });\n      } else {\n        code +=\n          `  Option 1\\n` +\n          `  Option 2\\n` +\n          `  Option 3\\n`;\n      }\n      code += ` \\n` +`\\n `;\n      return code;\n    }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TEXT_FIELD_DEFINATION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FieldTypeDefinition\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'text',\n  label: 'Text field',\n  icon: 'text_fields',\n  defaultConfig: {\n    label: 'Text Field',\n    required: false,\n  },\n  settingsConfig: [\n    {\n      type: 'text',\n      key: 'label',\n      label: 'Label'\n    },\n    {\n      type: 'text',\n      key: 'placeholder',\n      label: 'Placeholder'\n    },\n    {\n      type: 'checkbox',\n      key: 'required',\n      label: 'Required'\n    },\n    {\n      type: 'select',\n      key: 'inputType',\n      label: 'Input Type',\n      options: [\n        {value: 'text',label:'text'},\n        {value: 'number',label:'Number'},\n        {value: 'email',label:'Email'},\n        {value: 'tel',label:'Phone'},\n      ]\n    },\n  ],\n\n  component: TextField,\n  generateCode: (field) => `\n    \n      ${field.label}\n      \n    \n    `\n\n}\n                    \n                \n\n\n        \n    \n\n    src/app/feature/utils/view-transition.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        startViewTransition\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (callback: () => void) =>{\n  if (!document.startViewTransition) {\n    console.log('startViewTransition not supported')\n    callback();\n    return;\n  }else{\n    document.startViewTransition(callback);\n  }\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
